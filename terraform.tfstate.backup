{
  "version": 4,
  "terraform_version": "1.9.6",
  "serial": 343,
  "lineage": "e5ce03bd-bc99-4b55-63ef-28b0dea50126",
  "outputs": {
    "ControlPlane_Gateway_URL": {
      "value": "http://localhost:31490/hello",
      "type": "string"
    },
    "DataPlane_Gateway_URL": {
      "value": "http://localhost:32684/hello",
      "type": "string"
    },
    "dashboard_nodeport_url": {
      "value": "http://localhost:32181",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "kubernetes_secret",
      "name": "tyk_operator_conf",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "TYK_AUTH": "9b9ee3c7e2ce4cfe49f1305856447511",
              "TYK_MODE": "pro",
              "TYK_OPERATOR_LICENSEKEY": "",
              "TYK_ORG": "6726f01f759d1a0001c88afd",
              "TYK_URL": "http://dashboard-svc-tyk-cp-tyk-dashboard.tyk-cp.svc:3000"
            },
            "id": "tyk-cp/tyk-operator-conf",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "tyk-operator-conf",
                "namespace": "tyk-cp",
                "resource_version": "2607248",
                "uid": "5b76c767-5eee-405a-8911-cd4f7f1d7ed8"
              }
            ],
            "type": "Opaque"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "binary_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "mongo",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "mongodb",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "tyk-mongo",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "4.4.2",
                "chart": "mongodb",
                "name": "tyk-mongo",
                "namespace": "tyk-cp",
                "revision": 1,
                "values": "{\"auth\":{\"rootPassword\":\"jqiv2bpaOkb27ZmL\"},\"replicaSet\":{\"enabled\":true}}",
                "version": "10.0.5"
              }
            ],
            "name": "tyk-mongo",
            "namespace": "tyk-cp",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://marketplace.azurecr.io/helm/v1/repo",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "auth.rootPassword",
                "type": "",
                "value": "jqiv2bpaOkb27ZmL"
              },
              {
                "name": "replicaSet.enabled",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "10.0.5",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "set"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.tyk_cp",
            "random_password.mongo_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "redis",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "redis",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "tyk-redis-data",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "7.2.4",
                "chart": "redis",
                "name": "tyk-redis-data",
                "namespace": "tyk-cp",
                "revision": 1,
                "values": "{\"auth\":{\"password\":\"sebbYCyd3kbODDBv\"}}",
                "version": "19.0.2"
              }
            ],
            "name": "tyk-redis-data",
            "namespace": "tyk-cp",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "auth.password",
                "type": "",
                "value": "sebbYCyd3kbODDBv"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "19.0.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "set"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "random_password.redis_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "redis_dp",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "redis",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "tyk-redis-dp",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "7.2.4",
                "chart": "redis",
                "name": "tyk-redis-dp",
                "namespace": "tyk-dp",
                "revision": 1,
                "values": "{\"auth\":{\"password\":\"sebbYCyd3kbODDBv\"}}",
                "version": "19.0.2"
              }
            ],
            "name": "tyk-redis-dp",
            "namespace": "tyk-dp",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "auth.password",
                "type": "",
                "value": "sebbYCyd3kbODDBv"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "19.0.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "set"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.tyk_dp",
            "random_password.redis_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "tyk",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "tyk-control-plane",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "tyk-cp",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "",
                "chart": "tyk-control-plane",
                "name": "tyk-cp",
                "namespace": "tyk-cp",
                "revision": 13,
                "values": "{\"global\":{\"adminUser\":{\"email\":\"default@example.com\",\"firstName\":\"admin\",\"lastName\":\"user\",\"password\":\"123456\",\"useSecretName\":\"\"},\"components\":{\"bootstrap\":true,\"devPortal\":false,\"operator\":false,\"pump\":true},\"hashKeys\":true,\"license\":{\"dashboard\":\"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhbGxvd2VkX25vZGVzIjoiMjFlNzhmYWUtMGUwOC00YjA2LTc0YTItNDViNWNkNzFiYzA4LGEwOTYzYmExLWIzNjAtNDQ4Ni00YzFjLWUxMTU2M2I4MmY5MiwyOTMzMjI4Yi0wYjFlLTQ3YjEtNDU0Ni1jNWJmNGVhMjBkMjgsMjZiMzAxOGMtMzJlOC00NjU0LTYyOTctMWYyNDUzNmRhYTQ3LGNmYjE1MWM1LTdjZDgtNDk5Ny02NGY4LWYzNzM3YWE2NjBlOSw2YWY1YjQzZi0xOWFkLTQ0MDMtNWRjYy1hZWNjNjc0ZmFkYzgsYzgyYmM5MWMtZmMwYS00MmYxLTY0MzYtOWJhNTJiNjAxZGQzLDhjN2UzMWVhLTVjNTgtNGU1OS01ZDAxLTkwZWFkOWEwZTVkOSw4MTdlZGU5Ni03YjViLTRmMzctNDAyMi1hNTk3MGM3Yzg5ZWIsMGI3OWYzMjktNGQxYS00OTYyLTU0MjktY2M2N2UzNTZmNjk0IiwiZXhwIjoxNzMzMTgzOTk5LCJpYXQiOjE3MzA1Njk1MzUsIm93bmVyIjoiNjFjY2U2MmMxMjFjYTEwMDAxOGJiMTkwIiwic2NvcGUiOiJtdWx0aV90ZWFtLHJiYWMsZ3JhcGgsZmVkZXJhdGlvbixzdHJlYW1zIiwidiI6IjIifQ.Yz_GJujmarg_uRKMZsp3y522QKi6GqVsNOWAI-05626D9N5pDYTo7dkzHZk-L1N7QKMB7BdLxWa29uhtIcN6Wz1qcWcru35RCPx-SmZZmJSEjEfLjom5ZGe33eCCJwxvB6F5s1KlXiKI8r45DbjhEi1j6vp2m1NTCYog5kE2jRnJIoLzyRVykUSjScnW0rT5qg4W4edxCN1ZGInzzLv_KJu_6Qur0tGi24eoOxTwuJcVFmWR8hOi0JRnoRM53f2x6mJZZh0N86wAVZGEzTYsJB7uVSMz5lHqOusfQjs8slHg5Lft-Amb_dYFxDdv3_Qi-TpcfZ4BxTAl7Bvrd8Yj5g\",\"operator\":\"\"},\"mdcbSynchronizer\":{\"enabled\":false},\"mongo\":{\"driver\":\"mongo-go\",\"mongoURL\":\"mongodb://root:jqiv2bpaOkb27ZmL@tyk-mongo-mongodb.tyk-cp.svc.cluster.local:27017/tyk_analytics?authSource=admin\",\"useSSL\":false},\"mtls\":{\"privateCertificateEncodingSecret\":\"\"},\"oasValidateExamples\":false,\"oasValidateSchemaDefaults\":false,\"postgres\":{\"database\":\"tyk_analytics\",\"host\":\"tyk-postgres-postgresql.tyk.svc\",\"password\":null,\"port\":5432,\"sslmode\":\"disable\",\"user\":\"postgres\"},\"redis\":{\"addrs\":[\"tyk-redis-data-master.tyk-cp.svc.cluster.local:6379\"],\"pass\":\"sebbYCyd3kbODDBv\",\"storage\":{\"database\":0}},\"secrets\":{\"APISecret\":\"CHANGEME\",\"AdminSecret\":\"12345\",\"useSecretName\":\"\"},\"servicePorts\":{\"dashboard\":3000,\"gateway\":8080},\"storageType\":\"mongo\",\"tls\":{\"dashboard\":false,\"gateway\":false,\"useDefaultTykCertificate\":true}},\"tyk-bootstrap\":{\"bootstrap\":{\"dashboard\":true,\"devPortal\":true,\"extraVolumeMounts\":[],\"extraVolumes\":[],\"jobs\":{\"postInstall\":{\"extraEnvs\":[],\"image\":{\"repository\":\"tykio/tyk-k8s-bootstrap-post\",\"tag\":\"v2.2.0\"}},\"preDelete\":{\"extraEnvs\":[],\"image\":{\"repository\":\"tykio/tyk-k8s-bootstrap-pre-delete\",\"tag\":\"v2.2.0\"}},\"preInstall\":{\"extraEnvs\":[],\"image\":{\"repository\":\"tykio/tyk-k8s-bootstrap-pre-install\",\"tag\":\"v2.2.0\"}}},\"operatorSecret\":\"tyk-operator-conf\",\"org\":{\"cname\":\"tyk-portal.local\",\"hybrid\":{\"enabled\":true},\"name\":\"Default Org\"},\"podAnnotations\":{\"postInstallPodAnnotations\":{},\"preDeletePodAnnotations\":{},\"preInstallPodAnnotations\":{}},\"podLabels\":{\"postInstallPodLabels\":{},\"preDeletePodLabels\":{},\"preInstallPodLabels\":{}},\"portal\":false,\"sslInsecureSkipVerify\":false},\"fullnameOverride\":\"\",\"nameOverride\":\"\"},\"tyk-dashboard\":{\"dashboard\":{\"affinity\":{},\"allowExplicitPolicyId\":true,\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"dashboardSessionLifetime\":43200,\"defaultPageSize\":10,\"enableAggregateLookups\":true,\"enableAnalyticsCache\":true,\"enableDeleteKeyByHash\":true,\"enableDuplicateSlugs\":true,\"enableHashedKeysListing\":true,\"enableMultiOrgUsers\":true,\"enableOwnership\":true,\"enableUpdateKeyByHash\":true,\"extraEnvs\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"hashKeys\":true,\"homeDir\":\"/opt/tyk-dashboard\",\"hostConfig\":{\"disableOrgSlugPrefix\":true,\"enableHostNames\":true,\"overrideHostname\":\"tyk-gw.local\"},\"hostName\":\"tyk-dashboard.local\",\"image\":{\"pullPolicy\":\"Always\",\"repository\":\"tykio/tyk-dashboard\",\"tag\":\"v5.3.6\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"keyRequestFields\":\"appName;appType\",\"nodeSelector\":{},\"notificationsListenPort\":5000,\"notifyOnChange\":true,\"oauthRedirectUriSeparator\":\";\",\"podAnnotations\":{},\"podLabels\":{},\"replicaCount\":1,\"resources\":{},\"securityContext\":{\"fsGroup\":2000,\"runAsNonRoot\":true,\"runAsUser\":1000},\"service\":{\"annotations\":{},\"externalTrafficPolicy\":\"Local\",\"type\":\"ClusterIP\"},\"showOrgId\":true,\"ssoEnableUserLookup\":true,\"tls\":{\"certificates\":[{\"cert_file\":\"/etc/certs/tyk-dashboard/tls.crt\",\"domain_name\":\"*\",\"key_file\":\"/etc/certs/tyk-dashboard/tls.key\"}],\"certificatesMountPath\":\"/etc/certs/tyk-dashboard\",\"insecureSkipVerify\":false,\"secretName\":\"tyk-default-tls-secret\"},\"tolerations\":[],\"tykApiHost\":\"\",\"useShardedAnalytics\":true},\"fullnameOverride\":\"\",\"nameOverride\":\"\",\"portal\":{\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]}},\"tib\":{\"enabled\":false}},\"tyk-dev-portal\":{\"affinity\":{},\"containerPort\":3001,\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"database\":{\"connectionString\":\"db/portal.db\",\"dialect\":\"sqlite3\",\"enableLogs\":false,\"maxRetries\":3,\"retryDelay\":5000},\"extraEnvs\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"hostName\":\"tyk-dev-portal.local\",\"image\":{\"pullPolicy\":\"Always\",\"repository\":\"tykio/portal\",\"tag\":\"v1.10.0\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"kind\":\"StatefulSet\",\"license\":\"\",\"livenessProbe\":{\"initialDelaySeconds\":60},\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"readinessProbe\":{\"initialDelaySeconds\":60},\"replicaCount\":1,\"resources\":{},\"securityContext\":{\"fsGroup\":2000,\"runAsNonRoot\":true,\"runAsUser\":1000},\"service\":{\"annotations\":{},\"externalTrafficPolicy\":\"Local\",\"port\":3001,\"type\":\"ClusterIP\"},\"storage\":{\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"labels\":{},\"mountExistingPVC\":\"\",\"selector\":{},\"size\":\"8Gi\",\"storageClass\":\"\"},\"s3\":{\"acl\":\"private\",\"awsAccessKeyid\":\"your-access-key\",\"awsSecretAccessKey\":\"your-secret-key\",\"bucket\":\"your-portal-bucket\",\"endpoint\":\"https://s3.sa-east-1.amazonaws.com\",\"presign_urls\":true,\"region\":\"sa-east-1\"},\"type\":\"db\"},\"tolerations\":[],\"useSecretName\":\"\"},\"tyk-gateway\":{\"fullnameOverride\":\"\",\"gateway\":{\"affinity\":{},\"analyticsConfigType\":\"\",\"analyticsEnabled\":\"\",\"autoscaling\":{},\"containerPort\":8080,\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"control\":{\"annotations\":{},\"containerPort\":9696,\"enabled\":false,\"port\":9696,\"type\":\"ClusterIP\"},\"enableFixedWindowRateLimiter\":false,\"enablePathPrefixMatching\":true,\"enablePathSuffixMatching\":true,\"enableStrictRoutes\":true,\"extraEnvs\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"hostName\":\"tyk-gw.local\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"tykio/tyk-gateway\",\"tag\":\"v5.3.6\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"initContainers\":{\"setupDirectories\":{\"repository\":\"busybox\",\"resources\":{},\"tag\":1.32}},\"kind\":\"Deployment\",\"nodeSelector\":{},\"opentelemetry\":{\"connectionTimeout\":1,\"contextPropagation\":\"tracecontext\",\"enabled\":false,\"endpoint\":\"localhost:4317\",\"exporter\":\"grpc\",\"headers\":{},\"resourceName\":\"tyk\",\"sampling\":{\"parentBased\":false,\"rate\":0.5,\"type\":\"AlwaysOn\"},\"spanProcessorType\":\"batch\",\"tls\":{\"caFileName\":\"\",\"certFileName\":\"\",\"certificateSecretName\":\"\",\"enabled\":false,\"insecureSkipVerify\":true,\"keyFileName\":\"\",\"maxVersion\":1.3,\"minVersion\":1.2,\"secretMountPath\":\"\"}},\"pdb\":{\"enabled\":false,\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podAnnotations\":{},\"podLabels\":{},\"replicaCount\":1,\"resources\":{},\"securityContext\":{\"fsGroup\":2000,\"runAsNonRoot\":true,\"runAsUser\":1000},\"service\":{\"annotations\":{},\"externalTrafficPolicy\":\"Local\",\"loadBalancerIP\":\"\",\"type\":\"ClusterIP\"},\"tls\":{\"certificates\":[{\"cert_file\":\"/etc/certs/tyk-gateway/tls.crt\",\"domain_name\":\"*\",\"key_file\":\"/etc/certs/tyk-gateway/tls.key\"}],\"certificatesMountPath\":\"/etc/certs/tyk-gateway\",\"insecureSkipVerify\":false,\"secretName\":\"tyk-default-tls-secret\"},\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"}],\"useDashboardAppConfig\":{\"dashboardConnectionString\":\"\",\"enabled\":true,\"policyConnectionString\":\"\"}},\"nameOverride\":\"\"},\"tyk-mdcb\":{\"mdcb\":{\"affinity\":{},\"autoscaling\":{\"enabled\":false,\"maxReplicas\":100,\"minReplicas\":1,\"targetCPUUtilizationPercentage\":80},\"containerSecurityContext\":{},\"dontStoreAggregate\":false,\"dontStoreSelective\":false,\"enableMultipleAnalyticsKey\":true,\"extraEnvs\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"forwardAnalyticsToPump\":false,\"fullnameOverride\":\"\",\"healthcheck\":{\"cache_renewal_period\":10},\"httpPort\":8181,\"httpServerOptions\":{\"useSSL\":false},\"http_ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"mdcb-http.example.com\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"ignoreTagPrefixList\":[],\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"tykio/tyk-mdcb-docker\",\"tag\":\"v2.7.1\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"license\":\"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJTS1UiOiJUeWstTURDQi1FTlQiLCJleHAiOjE3MzMxODM5OTksIm93bmVyIjoiNjFjY2U2MmMxMjFjYTEwMDAxOGJiMTkwIn0.FJlvKQ7ADots-9nfniH8YgiBTh4gV0IY9ik805SyS8ragnXRdrvLFCnWZcn0l7WftSRXZAJEboXzpjzqnu6BhI63ZySAKc5qrjokLx8iMxLZoxQg2Xy4XPqqApZkbHDxGd3gWSRXX5eYDYJ2qAGW_7vXqRimSvF4bHLxFLAdoZdTCBf5fVNq3VBbJNTgn53FLCouMHpBqy7ZBKiwLTgddixj6e6-WmZyRcwld80DFtqMTvknaGR2Ma6l3pqnu67p_kAGN5sitcBZhF-PBGJElT8JnmayWAazk-FG3GdYqo4bxuuz1iL0zLofNSfOO5aR45Dr7LWtHztCgXbWZsyHuA\",\"listenPort\":9091,\"nameOverride\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"podSecurityContext\":{},\"probes\":{\"liveness\":{\"failureThreshold\":2,\"initialDelaySeconds\":5,\"path\":\"/liveness\",\"periodSeconds\":2,\"timeoutSeconds\":3},\"readiness\":{\"failureThreshold\":3,\"initialDelaySeconds\":1,\"path\":\"/readiness\",\"periodSeconds\":10,\"timeoutSeconds\":3}},\"replicaCount\":1,\"resources\":{},\"security\":{\"enableHttpSecureEndpoints\":false,\"secret\":\"CHANGEME\"},\"service\":{\"annotations\":{},\"externalTrafficPolicy\":\"Local\",\"port\":9091,\"type\":\"ClusterIP\"},\"serviceAccount\":{\"annotations\":{},\"automount\":true,\"enabled\":false,\"name\":\"\"},\"storeAnalyticsPerMinute\":false,\"tls\":{\"certificateCertFile\":\"/etc/certs/tls.crt\",\"certificateKeyFile\":\"/etc/certs/tls.key\",\"certificatesMountPath\":\"/etc/certs\",\"secretName\":\"mdcb-tls-secret\",\"useSSL\":false,\"volumeName\":\"mdcb-tls-secret-volume\"},\"tolerations\":[],\"trackAllPaths\":false,\"useSecretName\":\"\"}},\"tyk-operator\":{\"annotations\":{},\"envFrom\":[{\"secretRef\":{\"name\":\"tyk-operator-conf\"}}],\"envVars\":[{\"name\":\"TYK_HTTPS_INGRESS_PORT\",\"value\":\"8443\"},{\"name\":\"TYK_HTTP_INGRESS_PORT\",\"value\":\"8080\"}],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"fullnameOverride\":\"\",\"healthProbePort\":8081,\"hostNetwork\":false,\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"tykio/tyk-operator\",\"tag\":\"v1.0.0\"},\"imagePullSecrets\":[],\"metricsPort\":8080,\"nameOverride\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"podSecurityContext\":{\"allowPrivilegeEscalation\":false},\"rbac\":{\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"gcr.io/kubebuilder/kube-rbac-proxy\",\"tag\":\"v0.8.0\"},\"port\":8443,\"resources\":{}},\"replicaCount\":1,\"resources\":{},\"serviceMonitor\":false,\"webhookPort\":9443},\"tyk-pump\":{\"fullnameOverride\":\"\",\"nameOverride\":\"\",\"pump\":{\"affinity\":{},\"backend\":[\"prometheus\",\"mongo\"],\"containerPort\":9090,\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"extraEnvs\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"docker.tyk.io/tyk-pump/tyk-pump\",\"tag\":\"v1.11.0\"},\"imagePullSecrets\":[],\"mongoGraphPump\":{\"collectionName\":\"tyk_graph_analytics\"},\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"prometheusPump\":{\"customMetrics\":\"\",\"host\":\"\",\"path\":\"/metrics\",\"prometheusOperator\":{\"enabled\":false,\"podMonitorSelector\":{\"release\":\"prometheus-stack\"}}},\"replicaCount\":1,\"resources\":{},\"securityContext\":{\"fsGroup\":2000,\"runAsNonRoot\":true,\"runAsUser\":1000},\"service\":{\"annotations\":{},\"enabled\":false,\"externalTrafficPolicy\":\"Local\",\"port\":9090,\"type\":\"ClusterIP\"},\"sqlGraphPump\":{\"tableName\":\"tyk_analytics_graphs\"},\"tolerations\":[],\"uptimePumpBackend\":\"\"}}}",
                "version": "2.1.0"
              }
            ],
            "name": "tyk-cp",
            "namespace": "tyk-cp",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.tyk.io/public/helm/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "global.mongo.mongoURL",
                "type": "",
                "value": "mongodb://root:jqiv2bpaOkb27ZmL@tyk-mongo-mongodb.tyk-cp.svc.cluster.local:27017/tyk_analytics?authSource=admin"
              },
              {
                "name": "global.redis.pass",
                "type": "",
                "value": "sebbYCyd3kbODDBv"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "global:\n  license:\n    # The license key needed by Tyk Dashboard to work.\n    #\n    # NOTE: If you do not want to store license as a plain text in the file, you can use a Kubernetes secret\n    # that stores the dashboard license. Please see `.global.secrets.useSecretName`.\n    dashboard: \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhbGxvd2VkX25vZGVzIjoiMjFlNzhmYWUtMGUwOC00YjA2LTc0YTItNDViNWNkNzFiYzA4LGEwOTYzYmExLWIzNjAtNDQ4Ni00YzFjLWUxMTU2M2I4MmY5MiwyOTMzMjI4Yi0wYjFlLTQ3YjEtNDU0Ni1jNWJmNGVhMjBkMjgsMjZiMzAxOGMtMzJlOC00NjU0LTYyOTctMWYyNDUzNmRhYTQ3LGNmYjE1MWM1LTdjZDgtNDk5Ny02NGY4LWYzNzM3YWE2NjBlOSw2YWY1YjQzZi0xOWFkLTQ0MDMtNWRjYy1hZWNjNjc0ZmFkYzgsYzgyYmM5MWMtZmMwYS00MmYxLTY0MzYtOWJhNTJiNjAxZGQzLDhjN2UzMWVhLTVjNTgtNGU1OS01ZDAxLTkwZWFkOWEwZTVkOSw4MTdlZGU5Ni03YjViLTRmMzctNDAyMi1hNTk3MGM3Yzg5ZWIsMGI3OWYzMjktNGQxYS00OTYyLTU0MjktY2M2N2UzNTZmNjk0IiwiZXhwIjoxNzMzMTgzOTk5LCJpYXQiOjE3MzA1Njk1MzUsIm93bmVyIjoiNjFjY2U2MmMxMjFjYTEwMDAxOGJiMTkwIiwic2NvcGUiOiJtdWx0aV90ZWFtLHJiYWMsZ3JhcGgsZmVkZXJhdGlvbixzdHJlYW1zIiwidiI6IjIifQ.Yz_GJujmarg_uRKMZsp3y522QKi6GqVsNOWAI-05626D9N5pDYTo7dkzHZk-L1N7QKMB7BdLxWa29uhtIcN6Wz1qcWcru35RCPx-SmZZmJSEjEfLjom5ZGe33eCCJwxvB6F5s1KlXiKI8r45DbjhEi1j6vp2m1NTCYog5kE2jRnJIoLzyRVykUSjScnW0rT5qg4W4edxCN1ZGInzzLv_KJu_6Qur0tGi24eoOxTwuJcVFmWR8hOi0JRnoRM53f2x6mJZZh0N86wAVZGEzTYsJB7uVSMz5lHqOusfQjs8slHg5Lft-Amb_dYFxDdv3_Qi-TpcfZ4BxTAl7Bvrd8Yj5g\"\n    # The license key needed by Tyk Operator to work.\n    #\n    # NOTE: If you do not want to store license as a plain text in the file, you can use a Kubernetes secret\n    # that stores the operator license. Please see `.global.secrets.useSecretName`.\n    operator: \"\"\n\n  # adminUser specifies credentials for Tyk Dashboard and Dev Portal admin user while bootstrapping.\n  # Dashboard and Dev Portal admin information.\n  adminUser:\n    # If you don't want to store plaintext secrets for admin user in the Helm value file and would\n    # rather provide the k8s Secret externally please populate the value below.\n    # You can set following fields in the secret:\n    # - adminUserFirstName - sets .global.adminUser.firstName\n    # - adminUserLastName - sets .global.adminUser.lastName\n    # - adminUserEmail- sets .global.adminUser.email\n    # - adminUserPassword - sets .global.adminUser.password\n    useSecretName: \"\"\n\n    # firstName corresponds to the first name of the admin user that will be created during the bootstrapping process.\n    # It is used to set TYK_K8SBOOTSTRAP_TYK_ADMIN_FIRSTNAME\n    firstName: admin\n\n    # lastName corresponds to the last name of the admin user that will be created during the bootstrapping process.\n    # It is used to set TYK_K8SBOOTSTRAP_TYK_ADMIN_LASTNAME\n    lastName: user\n\n    # email corresponds to the email of the admin user that will be created during the bootstrapping process.\n    # It is used to set TYK_K8SBOOTSTRAP_TYK_ADMIN_EMAILADDRESS\n    email: default@example.com\n    # Set a password or a random one will be assigned.\n    password: \"123456\"\n\n  components:\n    # Determines whether the bootstrap jobs should be run\n    # Those jobs verify the presence of the dashboard license and perform various operations to\n    # make apps such as tyk-dashboard, tyk-portal and tyk-operator ready to use from the get go\n    # If this is set to false, only the hook that checks for dashboard license will be run\n    bootstrap: true\n    # Determines whether the pump component should be installed.\n    pump: true\n    # Determines whether Tyk Developer Portal component should be installed.\n    # If you want to bootstrap Tyk Developer Portal, set `tyk-bootstrap.bootstrap.devPortal` to true\n    devPortal: false\n    # operator determines whether Tyk Operator component should be installed or not.\n    # Tyk Operator needs cert-manager to be installed beforehand. Make sure that cert-manager is installed.\n    # For further details, please refer to https://tyk.io/docs/tyk-stack/tyk-operator/installing-tyk-operator/\n    operator: false\n\n  servicePorts:\n    # The port at which the dashboard service can be found at\n    dashboard: 3000\n    # The port at which the gateway service can be found at\n    gateway: 8080\n\n  tls:\n    # If set to true the Dashboard will use SSL connection.\n    dashboard: false\n    # When true, sets the gateway protocol to HTTPS.\n    gateway: false\n\n    # When true, it will install the certificate present in the templates folder, set to false when using\n    # a custom TLS certificate to avoid overwriting yours\n    useDefaultTykCertificate: true\n\n  secrets:\n    # APISecret sets node_secret and secret in tyk.conf\n    # tyk_analytics.conf tyk_api_config.secret\n    # tyk_analytics.conf shared_node_secret\n    APISecret: CHANGEME\n    # tyk_analytics.conf admin_secret\n    # tib.conf TykAPISettings.GatewayConfig.AdminSecret\n    # tib.conf TykAPISettings.DashboardConfig.AdminSecret\n    AdminSecret: \"12345\"\n    # If you don't want to store plaintext secrets in the Helm value file and would\n    # rather provide the k8s Secret externally please populate the value below\n    # You can set following fields in the secret\n    # APISecret - Sets node secret in both dashboard and tyk config\n    # AdminSecret - Admin user secret key\n    # DashLicense - Tyk Dashboard license key\n    # OperatorLicense - Tyk Operator license key\n    useSecretName: \"\"\n\n  redis:\n    # The addrs value will allow you to set your Redis addresses.\n    #\n    # If you are using Redis (e.g. Bitnami Redis at bitnami/redis) then enter single\n    # endpoint. If using sentinel connection mode for Redis, please update the port number (typically 26379).\n    #\n    # If using a Redis Cluster (e.g. bitnami/redis-cluster), you can list\n    # the endpoints of the redis instances or use the cluster configuration endpoint.\n    #\n    # Default value: redis.{{ .Release.Namespace }}.svc:6379\n    addrs:\n        - tyk-redis-data-master.tyk-cp.svc.cluster.local:6379\n    #   Example using tyk simple redis chart\n    #   - redis.tyk.svc:6379\n    #   Example using bitnami/redis\n    #   - tyk-redis-master.tyk.svc:6379\n    #   Example using bitnami/redis with sentinel\n    #   - tyk-redis.tyk.svc:26379\n    #   Example using bitnami/redis-cluster\n    #   - tyk-redis-redis-cluster.tyk.svc:6379\n\n    # Redis password\n    # If you're using Bitnami Redis chart please input your password in the field below\n    pass: \"\"\n\n    # Enables sentinel connection mode for Redis. If enabled, provide both\n    # mandatory values for sentinelPass and masterName.\n    # enableSentinel: false\n\n    # Redis sentinel password, only required while enableSentinel is true.\n    # For bitnami/redis the same password as Redis above\n    # sentinelPass: \"\"\n\n    # Redis sentinel master name, only required while enableSentinel is true.\n    # For bitnami/redis typically redis-master\n    # masterName: \"\"\n\n    # Redis password can also be provided via a secret. Provide the name of the secret and key below.\n    # passSecret:\n    #   name: \"\"\n    #   keyName: \"\"\n\n    # Enables SSL for Redis connection. Redis instance will have to support that.\n    # Default value: false\n    # useSSL: false\n\n    # Allows usage of self-signed certificates when connecting to an encrypted Redis database.\n    # sslInsecureSkipVerify: false\n\n    # Path to the CA file.\n    # sslCAFile: \"\"\n\n    # The Volume mount path\n    # Default value: /etc/certs\n    # certificatesMountPath: \"\"\n\n    # Path to the cert file.\n    # sslCertFile: \"\"\n\n    # Path to the key file.\n    # sslKeyFile: \"\"\n\n    # Maximum supported TLS version. Valid values are TLS 1.0, 1.1, 1.2, 1.3.\n    # Default value: 1.3\n    # tlsMaxVersion: \"1.3\"\n\n    # Minimum supported TLS version. Valid values are TLS 1.0, 1.1, 1.2, 1.3.\n    # Default value: 1.2\n    # tlsMinVersion: \"1.2\"\n\n    # Name of the tls secret. A secret needs to be created for this manually using the name as specified here\n    # secretName: \"\"\n\n    # Name of the volume where the secret will be mounted\n    # volumeName: \"\"\n\n    # The enableCluster value will allow you to indicate to Tyk whether you are\n    # running a Redis cluster or not.\n    # Default value: false\n    # enableCluster: true\n\n    # By default, the database index is 0. Setting the database index is not\n    # supported with redis cluster. As such, if you have enableCluster: true,\n    # then this value should be omitted or explicitly set to 0.\n    storage:\n      database: 0\n\n  # Please check https://tyk.io/docs/planning-for-production/database-settings/mongodb/#supported-versions\n  # for the list of supported MongoDB versions.\n  mongo:\n    # The mongoURL value will allow you to set your MongoDB address.\n    # Default value: mongodb://mongo.{{ .Release.Namespace }}.svc:27017/tyk_analytics\n    # mongoURL: mongodb://mongo.tyk.svc:27017/tyk_analytics\n\n    # If your MongoDB has a password you can add the username and password to the url\n    # mongoURL: mongodb://root:pass@tyk-mongo-mongodb.tyk.svc:27017/tyk_analytics?authSource=admin\n\n    # mongo-go driver is supported for Tyk 5.0.2+.\n    # We recommend using the mongo-go driver if you are using MongoDB 4.4.x+.\n    # For MongoDB versions prior to 4.4, please use the mgo driver.\n    # Since Tyk 5.3 the default driver is mongo-go.\n    driver: mongo-go\n\n    # Connection URL can also be set using a secret. Provide the name of the secret and key below.\n    # connectionURLSecret:\n    #   name: \"\"\n    #   keyName: \"\"\n\n    # Enables SSL for MongoDB connection. MongoDB instance will have to support that.\n    # Default value: false\n    useSSL: false\n\n  # Postgres connection string parameters.\n  postgres:\n    # host corresponds to the host name of postgres\n    host: tyk-postgres-postgresql.tyk.svc\n    # port corresponds to the port of postgres\n    port: 5432\n    # user corresponds to the user of postgres\n    user: postgres\n    # password corresponds to the password of the given postgres user in selected database\n    password:\n    # database corresponds to the database to be used in postgres\n    database: tyk_analytics\n    # sslmode corresponds to if postgres runs in sslmode (https)\n    sslmode: disable\n\n    # Connection string can also be set using a secret. Provide the name of the secret and key below.\n    # connectionStringSecret:\n    #   name: \"\"\n    #   keyName: \"\"\n\n  # Choose the storageType for Tyk. [ \"mongo\", \"postgres\" ]\n  storageType: \u0026globalStorageType mongo\n\n  mdcbSynchronizer:\n    # Enable the MDCB Synchroniser\n    # It will be used to set TYK_MDCB_SYNCWORKER_ENABLED to true in Tyk MDCB deployment.\n    enabled: false\n\n  mtls:\n    # Sets the AES256 secret which is used to encode certificate private keys when\n    # they are uploaded via certificate storage.\n    # It is used to set TYK_MDCB_SECURITY_PRIVATECERTIFICATEENCODINGSECRET\n    privateCertificateEncodingSecret: \"\"\n\n  # hashKeys specifies if your Tyk Control Plane is using hashed keys.\n  # It is used to set TYK_GW_HASHKEYS, TYK_DB_HASHKEYS, TYK_MDCB_HASHKEYS and TYK_MDCB_SYNCWORKER_HASHKEYS\n  # When set to true, Dashboard, MDCB, and management gateway will operate in a mode that is compatible with key hashing.\n  hashKeys: true\n\n  # Enables validation of examples in the OAS spec. Defaults to false.\n  # It is used to set TYK_GW_OAS_VALIDATE_EXAMPLES and TYK_DB_OAS_VALIDATE_EXAMPLES\n  oasValidateExamples: false\n  # Enables validation of schema defaults in the OAS spec. Defaults to false.\n  # It is used to set TYK_GW_OAS_VALIDATE_SCHEMA_DEFAULTS and TYK_DB_OAS_VALIDATE_SCHEMA_DEFAULTS\n  oasValidateSchemaDefaults: false\n\ntyk-gateway:\n  # nameOverride overrides the Chart name. It is truncated to 63 characters.\n  # Default value: tyk-gateway.name\n  nameOverride: \"\"\n\n  # fullnameOverride overrides App name. It is truncated to 63 characters.\n  # Default value: tyk-gateway.fullname\n  fullnameOverride: \"\"\n\n  gateway:\n    # The hostname to bind the Gateway to.\n    hostName: \u0026gwHostName tyk-gw.local\n\n    # EnableFixedWindowRateLimiter enables fixed window rate limiting.\n    # FixedWindow will allow requests up to the configured rate limit,\n    # and then block traffic for the remainder of the window duration.\n    # It has minimal impact on redis, however it will not protect against\n    # traffic spikes, it does not have spike arrest behaviour.\n    enableFixedWindowRateLimiter: false\n\n    # If this option is set to true, it will enable polling the Dashboard service for API definitions\n    useDashboardAppConfig:\n      enabled: true\n      # Set it to the URL to your Dashboard instance (or a load balanced instance) if and only if\n      # Tyk Dashboard runs with custom service name, for instance; using `fullnameOverride` in `tyk-dashboard` section.\n      # The URL needs to be formatted as: http://dashboard_host:port\n      # It is used to set TYK_GW_DBAPPCONFOPTIONS_CONNECTIONSTRING\n      dashboardConnectionString: \"\"\n\n      # This option is required if Policy source is set to Tyk Dashboard (`service`) if and only if\n      # Tyk Dashboard runs with custom service name, for instance; using `fullnameOverride` in `tyk-dashboard` section.\n      # Set this to the URL of your Tyk Dashboard installation.\n      # The URL needs to be formatted as: http://dashboard_host:port.\n      # It is used to set TYK_GW_POLICIES_POLICYCONNECTIONSTRING\n      policyConnectionString: \"\"\n\n    tls:\n      # The name of the secret which should contain the TLS certificate you want to use with the gateway deployment\n      secretName: tyk-default-tls-secret\n      # This options allows you to skip verifying the TLS certificate. This is typically enabled when using self-signed certs.\n      insecureSkipVerify: false\n\n      # certificatesMountPath corresponds to the mount path of the secret.\n      certificatesMountPath: \"/etc/certs/tyk-gateway\"\n      # certificates is an array of strings, used to set TYK_GW_HTTPSERVEROPTIONS_CERTIFICATES\n      certificates:\n        - domain_name: \"*\"\n          cert_file: \"/etc/certs/tyk-gateway/tls.crt\"\n          key_file: \"/etc/certs/tyk-gateway/tls.key\"\n\n    # kind is type of k8s object to be created for gateway.\n    kind: Deployment\n\n    # replicaCount specifies number of replicas to be created if kind is Deployment.\n    replicaCount: 1\n\n    # autoscaling configuration if kind IS NOT DaemonSet\n    autoscaling: {}\n    #  enabled: true\n    #  minReplicas: 1\n    #  maxReplicas: 3\n    #  averageCpuUtilization: 60\n    #  averageMemoryUtilization: null\n    #  autoscalingTemplate:\n    #   Custom or additional autoscaling metrics\n    #   ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-custom-metrics\n    #    - type: Pods\n    #      pods:\n    #        metric:\n    #          name: nginx_ingress_controller_nginx_process_requests_total\n    #        target:\n    #          type: AverageValue\n    #          averageValue: 10000m\n\n    # analyticsEnabled property is used to enable/disable analytics.\n    # If set to empty or nil, analytics will be enabled/disabled based on `global.components.pump`.\n    analyticsEnabled: \"\"\n\n    image:\n      # image repository for Tyk Gateway\n      repository: tykio/tyk-gateway\n\n      # image tag for Tyk Gateway\n      tag: v5.3.6\n\n      # image pull policy for Tyk Gateway\n      pullPolicy: IfNotPresent\n\n    initContainers:\n      # image configuration for the initContainer that setups up the tyk directory structure\n      setupDirectories:\n        repository: busybox\n        tag: 1.32\n        resources: {}\n        # If you do want to specify resources, uncomment the following\n        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n        # limits:\n        #   cpu: 100m\n        #   memory: 128Mi\n        # requests:\n        #   cpu: 100m\n        #   memory: 128Mi\n\n    # image pull secrets to use when pulling images from repository\n    imagePullSecrets: []\n\n    # The port which will be exposed on the container for tyk-gateway\n    containerPort: 8080\n\n    service:\n      # type of service\n      type: ClusterIP\n\n      # external traffic policy of the service. Set it only if you are using LoadBalancer service type\n      externalTrafficPolicy: Local\n\n      # specify loadBalancerIP if the service type is load balancer\n      loadBalancerIP: \"\"\n\n      # annotations for service\n      annotations: {}\n\n    control:\n      # If enabled, exposes control port of the gateway\n      enabled: false\n\n      # control port of gateway\n      containerPort: 9696\n\n      # port number for control port service\n      port: 9696\n\n      # service type for control port service\n      type: ClusterIP\n\n      # annotations for control port service\n      annotations: {}\n\n    # Creates an ingress object in k8s. Will require an ingress-controller and\n    # annotation to that ingress controller.\n    ingress:\n      # if enabled, creates an ingress resource for the gateway\n      enabled: false\n\n      # specify ingress controller class name\n      className: \"\"\n\n      # annotations for ingress\n      annotations: {}\n\n      # ingress rules\n      hosts:\n        - host: chart-example.local\n          paths:\n            - path: /\n              pathType: ImplementationSpecific\n\n      # tls configuration for ingress\n      #  - secretName: chart-example-tls\n      #    hosts:\n      #      - chart-example.local\n      tls: []\n\n    # PodDisruptionBudget configuration\n    pdb:\n      enabled: false\n      # minAvailable and maxUnavailable configure thresholds for PodDisruptionBudget resource\n      # per PodDisruptionBudget spec they are mutually exclusive, but this chart allows\n      # setting them both, in which case minAvailable will take precedence\n      minAvailable: \"\"\n      maxUnavailable: \"\"\n\n    # We usually recommend not to specify default resources and to leave this\n    # as a conscious choice for the user. This also increases chances charts\n    # run on environments with little resources, such as Minikube. If you do\n    # want to specify resources, uncomment the following lines, adjust them\n    # as necessary, and remove the curly braces after 'resources:'.\n    # limits:\n    #  cpu: 100m\n    #  memory: 128Mi\n    # requests:\n    #  cpu: 100m\n    #  memory: 128Mi\n    resources: {}\n\n    # securityContext values for gateway pod. All fields from PodSecurityContext object can be added here.\n    securityContext:\n      runAsUser: 1000\n      fsGroup: 2000\n      runAsNonRoot: true\n\n    # containerSecurityContext values for gateway container. All fields from SecurityContext object can be added here.\n    containerSecurityContext:\n      runAsNonRoot: true\n      runAsUser: 1000\n      allowPrivilegeEscalation: false\n      privileged: false\n      readOnlyRootFilesystem: true\n      seccompProfile:\n        type: RuntimeDefault\n      capabilities:\n        drop:\n          - ALL\n\n    # node labels for gateway pod assignment\n    nodeSelector: {}\n\n    # tolerations for gateway pod assignment\n    tolerations:\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n\n    # affinity for gateway pod assignment\n    affinity: {}\n\n    # used to decide whether to send the results back directly to Tyk without a hybrid pump\n    # if you want to send analytics to control plane instead of pump, change analyticsConfigType to \"rpc\"\n    # TODO: Consider updating analytics config type to RPC\n    # Ref: https://github.com/TykTechnologies/tyk-charts/pull/211#discussion_r1458662620\n    analyticsConfigType: \"\"\n\n    # opentelemetry is used to configure opentelemetry for Tyk Gateway\n    opentelemetry:\n      # Used to enable/disable opentelemetry\n      enabled: false\n      # exporter is used to define the type of the exporter to sending data in OTLP protocol\n      # Valid values are \"grpc\" or \"http\"\n      exporter: grpc\n      # endpoint defines OpenTelemetry collector endpoint to connect to.\n      endpoint: localhost:4317\n      # A map of headers that will be sent with HTTP requests to the collector.\n      # It should be set to map of string to string\n      headers: {}\n      # Timeout for establishing a connection to the collector\n      connectionTimeout: 1\n      # Name of the resource that will be used to identify the resource.\n      resourceName: tyk\n      # Type of the span processor to use. Valid values are “simple” or “batch”.\n      spanProcessorType: batch\n      # Type of the context propagator to use. Valid values are \"tracecontext\" and \"b3\".\n      contextPropagation: tracecontext\n      # TLS configuration for the exporter.\n      tls:\n        # Flag that can be used to enable TLS\n        enabled: false\n        # Flag that can be used to skip TLS verification if TLS is enabled\n        insecureSkipVerify: true\n        # Maximum TLS version that is supported.\n        maxVersion: 1.3\n        # Minimum TLS version that is supported\n        minVersion: 1.2\n        # Path to the cert file\n        certFileName: \"\"\n        # Path to the key file\n        keyFileName: \"\"\n        # Path to CA file\n        caFileName: \"\"\n        # Existing secret that stores TLS and CA Certificate\n        certificateSecretName: \"\"\n        # Mount path on which certificate secret should be mounted\n        secretMountPath: \"\"\n      sampling:\n        # Refers to the policy used by OpenTelemetry to determine whether a particular trace should be sampled or not.\n        type: \"AlwaysOn\"\n        # Parameter for the TraceIDRatioBased sampler type and represents the percentage of traces to be sampled.\n        rate: 0.5\n        # Rule that ensures that if we decide to record data for a particular operation, we’ll also record data for\n        # all the subsequent work that operation causes\n        parentBased: false\n\n    # EnablePathPrefixMatching changes the URL matching from wildcard mode to prefix mode.\n    # If prefix matching is enabled, the match will be performed\n    # - as a prefix match (/json*).\n    # - against the full listen path and versioning URL (/listen-path/v4/json)\n    # - the stripped listen path URL (/v4/json), and the stripped version information (/json).\n    enablePathPrefixMatching: true\n    # EnablePathSuffixMatching changes the URL matching to match as a suffix.\n    # For example, /json is matched as /json$ against\n    # - the full listen path and versioning URL (/listen-path/v4/json)\n    # - the stripped listen path URL (/v4/json)\n    # - the stripped version information (/json)\n    enablePathSuffixMatching: true\n    # EnableStrictRoutes changes the routing to avoid nearest-neighbour requests on overlapping routes\n    # - if disabled, `/apple` will route to `/app`, the current default behavior,\n    # - if enabled, `/app` only responds to `/app`, `/app/` and `/app/*` but not `/apple`\n    # Regular expressions and parameterized routes will be left alone regardless of this setting.\n    enableStrictRoutes: true\n\n    # extraEnvs is used to set gateway env variables\n    # - name: TYK_GW_HTTPSERVEROPTIONS_SSLINSECURESKIPVERIFY\n    #   value: \"true\"\n    extraEnvs: []\n\n    # extraVolumes is a list of volumes to be added to the pod\n    # extraVolumes:\n    #   - name: ca-certs\n    #     secret:\n    #       defaultMode: 420\n    #       secretName: ca-certs\n    extraVolumes: []\n\n    # extraVolumeMounts is a list of volume mounts to be added to the pod\n    # extraVolumeMounts:\n    #   - name: ca-certs\n    #     mountPath: /etc/ssl/certs/ca-certs.crt\n    #     readOnly: true\n    extraVolumeMounts: []\n\n    # podAnnotations is annotations to be added to Tyk Gateway pod.\n    # It takes key-value pairs.\n    # There are no required annotation field for Tyk Gateway.\n    #\n    # podAnnotations:\n    #   yourkey: value\n    #   image: yourhub\n    podAnnotations: {}\n\n    # podLabels specifies labels to be added in gateway Pod\n    podLabels: {}\n\ntyk-operator:\n  nameOverride: \"\"\n  fullnameOverride: \"\"\n  # envFrom loads environment variables from the specified resources such as Kubernetes Secret\n  # to the Tyk Operator Controller Manager pod.\n  envFrom:\n    - secretRef:\n        name: tyk-operator-conf\n  # envVars adds environment variables to the Tyk Operator Controller Manager pod.\n  envVars:\n    - name: TYK_HTTPS_INGRESS_PORT\n      value: \"8443\"\n    - name: TYK_HTTP_INGRESS_PORT\n      value: \"8080\"\n  image:\n    # image repository for Tyk Operator\n    repository: tykio/tyk-operator\n    # image pull policy\n    pullPolicy: IfNotPresent\n    # image tag for Tyk Operator\n    tag: \"v1.0.0\"\n  # number for replicas for Tyk Operator deployment.\n  replicaCount: 1\n  # imagePullSecrets specify imagePullSecrets for ServiceAccount\n  imagePullSecrets: []\n  # extraVolumes is a list of volumes to be added to the pod\n  # extraVolumes:\n  #   - name: ca-certs\n  #     secret:\n  #       secretName: ca-certs\n  #   - name: ca-certs\n  #     configMap:\n  #       name: custom-ca-configmap\n  extraVolumes: []\n\n  # extraVolumeMounts is a list of volume mounts to be added to the pod\n  # extraVolumeMounts:\n  #   - name: ca-certs\n  #     mountPath: /etc/ssl/certs/your-cert.pem\n  #     subPath: your-cert.pem\n  #     readOnly: false\n  extraVolumeMounts: []\n\n  # healthProbePort identifies the port the Controller Manager will listen on. Used by liveness and readiness probes\n  healthProbePort: 8081\n  # metricsPort identifies the port on which Tyk Operator metrics are served\n  metricsPort: 8080\n  # webhookPort identifies the port on which webhooks are handled\n  webhookPort: 9443\n\n  annotations: {}\n  podAnnotations: {}\n  podSecurityContext:\n    allowPrivilegeEscalation: false\n  resources: {}\n  nodeSelector: {}\n  hostNetwork: false\n\n  # rbac specifies necessary resources for kube-rbac-proxy.\n  rbac:\n    resources: {}\n    # specify custom/internal repo name for kube-rbac-proxy container\n    image:\n      repository: gcr.io/kubebuilder/kube-rbac-proxy\n      pullPolicy: IfNotPresent\n      tag: \"v0.8.0\"\n    port: 8443\n\n  # serviceMonitor decides deploying ServiceMonitor if Prometheus Operator scrapes /metrics.\n  # By default it is set to false and set it to true to enable deploying Service Monitor.\n  # Tyk Operator publishes a collection of performance metrics for each controller.\n  # These metrics can be scraped by Prometheus Operator, by deploying ServiceMonitor resource.\n  serviceMonitor: false\n\ntyk-pump:\n  ## Default values for tyk-pump chart.\n  ## This is a YAML-formatted file.\n  ## Declare variables to be passed into your templates.\n  ## See Tyk Helm documentation for installation details:\n  ## https://tyk.io/docs/tyk-oss/ce-helm-chart/\n  ## Registry for all Tyk images - https://hub.docker.com/u/tykio\n\n  # Overrides chart name. It is truncated to 63 characters.\n  # Default value: tyk-pump.name\n  nameOverride: \"\"\n\n  # Overrides app name. IT is truncated to 63 characters.\n  # Default value: tyk-pump.fullname\n  fullnameOverride: \"\"\n\n  # If pump is enabled the Gateway will create and collect analytics data to send\n  # to a data store of your choice. These can be set up in the pump config. The\n  # possible pump configs can be found here:\n  # https://github.com/TykTechnologies/tyk-pump#configuration\n  pump:\n    # number for replicas for pump deployment\n    replicaCount: 1\n\n    # podAnnotations is annotations to be added to Tyk Pump pod.\n    # It takes key-value pairs.\n    # There are no required annotation field for Tyk Pump.\n    #\n    # podAnnotations:\n    #   yourkey: value\n    #   image: yourhub\n    podAnnotations: {}\n\n    # podLabels specifies labels to be added in pump Pod\n    podLabels: {}\n\n    image:\n      # image repository for Tyk pump\n      repository: docker.tyk.io/tyk-pump/tyk-pump\n\n      # tag for Tyk pump\n      tag: v1.11.0\n\n      # image pull policy\n      pullPolicy: IfNotPresent\n\n    # image pull secrets to use when pulling images from repository\n    imagePullSecrets: []\n\n    service:\n      # Tyk Pump svc is disabled by default. Set it to true to enable it.\n      enabled: false\n\n      # type specifies type of the service.\n      type: ClusterIP\n\n      # port specifies the port exposed by the service.\n      port: 9090\n\n      # externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or\n      # cluster-wide endpoints, while using LoadBalancer type of service.\n      externalTrafficPolicy: Local\n\n      # annotations specifies annotations to be added Tyk Pump service.\n      annotations: {}\n\n    # containerPort represents the port where Tyk Pump serve the metrics, for instance metrics for Prometheus.\n    # The default port is 9090.\n    containerPort: 9090\n\n    # backend defines the pumps to be created by default, as an array of string.\n    # Supported backends are:\n    #   - \"mongo\": Enables Mongo, Mongo Aggregate and Mongo Selective Pump\n    #   - \"mongo-aggregate\": Enables ONLY Mongo Aggregate AND Mongo Graph Pump\n    #   - \"mongo-selective\": Enables ONLY Mongo Selective\n    #   - \"postgres\": Enables Postgres Aggregate, Postgres Graph Aggregate, SQL Pump and SQL graph pump\n    #   - \"postgres-aggregate\": Enables ONLY SQL Aggregate AND SQL Graph Aggregate\n    #   - \"postgres-pump\": Enables ONLY SQL Pump AND SQL graph pump\n    #   - \"prometheus\": Enables Prometheus Pump. See pump.prometheusPump for Prometheus Pump configurations.\n    #   - \"hybrid\": Enables Hybrid Pump\n    # If you would like to use other backends such as ElasticSearch, please\n    # configure the backend via environment variables.\n    backend:\n      - \"prometheus\"\n      - *globalStorageType\n\n    # uptimePumpBackend configures uptime Tyk Pump. [\"\", \"mongo\", \"postgres\"].\n    # Set it to \"\" for disabling uptime Tyk Pump. By default, uptime pump is disabled.\n    uptimePumpBackend: \"\"\n\n    # prometheusPump configures Tyk Pump to expose Prometheus metrics.\n    # Please add \"prometheus\" to .Values.pump.backend in order to enable Prometheus Pump.\n    # The container port where Tyk Pump serves the metrics to Prometheus can be configured\n    # via .pump.containerPort field.\n    prometheusPump:\n      # host represents the host without port, where Tyk Pump serve the metrics for Prometheus.\n      host: \"\"\n      # path represents the path to the Prometheus collection. For example /metrics.\n      path: /metrics\n      # customMetrics allows defining custom Prometheus metrics for Tyk Pump.\n      # It accepts a string that represents a JSON object. For instance,\n      #\n      # customMetrics: '[{\"name\":\"tyk_http_requests_total\",\"description\":\"Total of API requests\",\"metric_type\":\"counter\",\"labels\":[\"response_code\",\"api_name\",\"method\",\"api_key\",\"alias\",\"path\"]},          {              \"name\":\"tyk_http_latency\",              \"description\":\"Latency of API requests\",              \"metric_type\":\"histogram\",              \"labels\":[\"type\",\"response_code\",\"api_name\",\"method\",\"api_key\",\"alias\",\"path\"]          }]'\n      customMetrics: \"\"\n      # If you are using prometheus Operator, set the fields in the section below.\n      prometheusOperator:\n        # enabled determines whether the Prometheus Operator is in use or not. By default,\n        # it is disabled.\n        # Tyk Pump can be monitored with PodMonitor Custom Resource of Prometheus Operator.\n        # If enabled, PodMonitor resource is created based on .Values.pump.prometheusPump.prometheusOperator.podMonitorSelector\n        # for Tyk Pump.\n        enabled: false\n        # podMonitorSelector represents a podMonitorSelector of your Prometheus resource. So that\n        # your Prometheus resource can select PodMonitor objects based on selector defined here.\n        # Please set this field to the podMonitorSelector field of your monitoring.coreos.com/v1\n        # Prometheus resource's spec.\n        #\n        # You can check the podMonitorSelector via:\n        #   kubectl describe prometheuses.monitoring.coreos.com \u003cPROMETHEUS_POD\u003e\n        podMonitorSelector:\n          release: prometheus-stack\n\n    # sqlGraphPump configures values to be used to configure tyk sql graph pump.\n    sqlGraphPump:\n      # tableName is the name of the table that will be created and used by the sql graph pump\n      tableName: \"tyk_analytics_graphs\"\n\n    # mongoGraphPump configures values to be used to configure tyk mongo graph pump.\n    mongoGraphPump:\n      # collectionName is the name of the collection that will be created and used by the mongo graph pump\n      collectionName: \"tyk_graph_analytics\"\n\n    # We usually recommend not to specify default resources and to leave this\n    # as a conscious choice for the user. This also increases chances charts\n    # run on environments with little resources, such as Minikube. If you do\n    # want to specify resources, uncomment the following lines, adjust them\n    # as necessary, and remove the curly braces after 'resources:'.\n    # limits:\n    #  cpu: 100m\n    #  memory: 128Mi\n    # requests:\n    #  cpu: 100m\n    #  memory: 128Mi\n    resources: {}\n\n    # securityContext values for pump pod. All fields from PodSecurityContext object can be added here.\n    securityContext:\n      runAsUser: 1000\n      fsGroup: 2000\n      runAsNonRoot: true\n\n    # containerSecurityContext values for pump container. All fields from SecurityContext object can be added here.\n    containerSecurityContext:\n      runAsNonRoot: true\n      runAsUser: 1000\n      allowPrivilegeEscalation: false\n      privileged: false\n      readOnlyRootFilesystem: true\n      seccompProfile:\n        type: RuntimeDefault\n      capabilities:\n        drop:\n          - ALL\n\n    # node labels for pump pod assignment\n    nodeSelector: {}\n\n    # tolerations for pump pod assignment\n    tolerations: []\n\n    # affinity for pump pod assignment\n    affinity: {}\n\n    # extraEnvs is used to set environment variables in pump container\n    # - name: TYK_PMP_PURGEDELAY\n    #   value: 30\n    extraEnvs: []\n\n    # extraVolumes is a list of volumes to be added to the pod\n    # extraVolumes:\n    #   - name: ca-certs\n    #     secret:\n    #       defaultMode: 420\n    #       secretName: ca-certs\n    extraVolumes: []\n\n    # extraVolumeMounts is a list of volume mounts to be added to the pod\n    # extraVolumeMounts:\n    #   - name: ca-certs\n    #     mountPath: /etc/ssl/certs/ca-certs.crt\n    #     readOnly: true\n    extraVolumeMounts: []\n\ntyk-bootstrap:\n  fullnameOverride: \"\"\n  nameOverride: \"\"\n\n  bootstrap:\n    # Trigger to control if we want to bootstrap the Developer Portal component using tyk-bootstrap\n    devPortal: true\n\n    # Trigger to control if we want to bootstrap the dashboard component using tyk-bootstrap\n    dashboard: true\n\n    # Trigger to control if we want to bootstrap the classic portal component using tyk-bootstrap\n    portal: false\n\n    # Skip validating the SSL certificates. Usually needed when using self-signed certs.\n    sslInsecureSkipVerify: false\n\n    # Trigger to control if we want to create the tyk-operator secret\n    operatorSecret: tyk-operator-conf\n\n    # jobs field includes configurations for Helm Hooks.\n    jobs:\n      # preInstall configures pre-install Helm hook\n      preInstall:\n        # image specifies image repository of bootstrap images\n        image:\n          # repository specifies image repository of pre-install job.\n          repository: tykio/tyk-k8s-bootstrap-pre-install\n          # tag specifies image tag of pre-install job.\n          tag: v2.2.0\n\n        # extraEnvs is used to set extra environment variables to pre-install job.\n        # - name: TYK_K8SBOOTSTRAP_TYK_DASHBOARDLICENSE\n        #   value: \"yourlicense\"\n        extraEnvs: []\n\n      # postInstall configures post-install Helm hook\n      postInstall:\n        # image specifies image repository of bootstrap images\n        image:\n          # repository specifies image repository of post-install job.\n          repository: tykio/tyk-k8s-bootstrap-post\n          # tag specifies image tag of post-install job.\n          tag: v2.2.0\n\n        # extraEnvs is used to set extra environment variables to post-install job.\n        # - name: TYK_K8SBOOTSTRAP_TYK_ADMIN_FIRSTNAME\n        #   value: \"burak\"\n        extraEnvs: []\n\n      # preDelete configures pre-delete Helm hook\n      preDelete:\n        # image specifies image repository of bootstrap images\n        image:\n          # repository specifies image repository of pre-delete job.\n          repository: tykio/tyk-k8s-bootstrap-pre-delete\n          # tag specifies image tag of pre-delete job.\n          tag: v2.2.0\n\n        # extraEnvs is used to set extra environment variables to pre-delete job.\n        # - name: TYK_K8SBOOTSTRAP_OPERATORKUBERNETESSECRETNAME\n        #   value: \"tyk-operator-conf\"\n        extraEnvs: []\n\n    org:\n      # The name for your organization inside Tyk\n      name: Default Org\n      # The hostname to bind the Portal to.\n      cname: tyk-portal.local\n      # hybrid configures whether hybrid organisation is enabled during bootstrap or not.\n      hybrid:\n        # Enabling hybrid allows a worker gateways to login as an organisation member into MDCB.\n        # Set this field to true while using MDCB control plane.\n        enabled: true\n\n    # podAnnotations specifies annotations to be added Tyk Bootstrap job pods.\n    # It takes key-value pairs.\n    # There are no required annotations for Tyk Bootstrap.\n    #\n    # podAnnotations:\n    #   postInstallPodAnnotations:\n    #     key: value\n    #     post: install\n    #   preDeletePodAnnotations:\n    #     key: value\n    #     post: install\n    podAnnotations:\n      # preInstallPodAnnotations specifies annotations to be added to Tyk Bootstrap pre-install hook's job pods.\n      preInstallPodAnnotations: {}\n      # postInstallPodAnnotations specifies annotations to be added to Tyk Bootstrap post-install hook's job pods.\n      postInstallPodAnnotations: {}\n      # preDeletePodAnnotations specifies annotations to be added to Tyk Bootstrap pre-delete hook's job pods.\n      preDeletePodAnnotations: {}\n\n    # podLabels specifies labels to be added in bootstrap Pod\n    podLabels:\n      # preInstallPodLabels specifies labels to be added to Tyk Bootstrap pre-install hook's job pods.\n      preInstallPodLabels: {}\n      # postInstallPodLabels specifies labels to be added to Tyk Bootstrap post-install hook's job pods.\n      postInstallPodLabels: {}\n      # preDeletePodLabels specifies labels to be added to Tyk Bootstrap pre-delete hook's job pods.\n      preDeletePodLabels: {}\n\n    # extraVolumes is a list of volumes to be added to the pod\n    # extraVolumes:\n    #   - name: ca-certs\n    #     secret:\n    #       defaultMode: 420\n    #       secretName: ca-certs\n    extraVolumes: []\n\n    # extraVolumeMounts is a list of volume mounts to be added to the pod\n    # extraVolumeMounts:\n    #   - name: ca-certs\n    #     mountPath: /etc/ssl/certs/ca-certs.crt\n    #     readOnly: true\n    extraVolumeMounts: []\n\ntyk-dashboard:\n  # nameOverride overrides the Chart name. It is truncated to 63 characters.\n  nameOverride: \"\"\n\n  # fullnameOverride overrides App name. It is truncated to 63 characters.\n  fullnameOverride: \"\"\n\n  dashboard:\n    # This is the URL of your Tyk Gateway node, which is used to set TYK_DB_TYKAPI_HOST.\n    # The Dashboard controls Tyk using the Gateway API and only requires visibility to one node. In a sharded environment,\n    # the Gateway node specified here must not be sharded.\n    # - If you are using tyk-stack chart, it is automatically set to the gateway service URL.\n    #   HOWEVER, if Tyk Gateway runs with custom service name, please override with the correct URL using this field.\n    # - If you are using tyk-dashboard chart, you need to set the correct Gateway URL here too.\n    # The URL needs to be formatted as: http://gateway_host\n    tykApiHost: \"\"\n    # enableOwnership specifies if API Ownership for Self-Managed installations is enabled or not.\n    # It is used to set TYK_DB_ENABLEOWNERSHIP\n    enableOwnership: true\n    # defaultPageSize specifies the page size that the dashboard should use.\n    # It is used to set TYK_DB_PAGESIZE\n    defaultPageSize: 10\n    # notifyOnChange specifies whether the Tyk Dashboard will notify all Tyk Gateway nodes to hot-reload when an API definition is changed.\n    # It is used to set TYK_DB_NOTIFYONCHANGE\n    notifyOnChange: true\n    # Deprecated:\n    #   This field is deprecated in from v1.4.0, please set `global.hashKeys` for configuring hash keys feature\n    #     of Tyk Dashboard.\n    hashKeys: true\n    # enableDuplicateSlugs configures the dashboard whether validate against other listen paths.\n    # Setting this option to true will cause the dashboard to NOT validate against other listen paths.\n    # It is used to set TYK_DB_ENABLEDUPLICATESLUGS\n    enableDuplicateSlugs: true\n    # showOrgId determines whether the Org ID will be shown in the Users -\u003e Username detail page.\n    # This can be useful for quickly identifying your Org ID.\n    # It is used to set TYK_DB_SHOWORGID\n    showOrgId: true\n    hostConfig:\n      # Enable this option to have the Dashboard only allow access on a specific domain and 404 on any other host access\n      # It is used to set TYK_DB_HOSTCONFIG_ENABLEHOSTNAMES\n      enableHostNames: true\n      # By default, for developer portal, Tyk will add orgID prefix. Set to true if you have single tenant application or each portal on separate domain.\n      # It is used to set TYK_DB_HOSTCONFIG_DISABLEORGSLUGPREFIX\n      disableOrgSlugPrefix: true\n      # Set this value to whatever hostname your Tyk Gateway is running on.\n      # It is used to set TYK_DB_HOSTCONFIG_GATEWAYHOSTNAME\n      overrideHostname: *gwHostName\n    # The path to the home directory of Tyk Dashboard, this must be set in order for Portal templates and other files to be loadable.\n    # It is used to set TYK_DB_HOMEDIR\n    homeDir: \"/opt/tyk-dashboard\"\n    # If using the mongo-pump-selective pump, where data is written to org-id-specific collections in MongoDB,\n    # then enabling this option will switch querying for analytics over to the independent collection entries.\n    # It is used to set TYK_DB_USESHARDEDANALYTICS\n    useShardedAnalytics: true\n    # If using the new Aggregate Pump, Tyk Analytics can make use of the newer, faster Analytics lookup,\n    # to ensure that this can be made backwards compatible.This option must be set to true,\n    # in conjunction with the aggregate_lookup_cutoff value.\n    # It is used to set TYK_DB_ENABLEAGGREGATELOOKUPS\n    enableAggregateLookups: true\n    # enableAnalyticsCache enables the caching of analytics data queries.\n    # When this field is set to true, the Tyk Dashboard will cache the results of analytics queries in Redis,\n    # which can significantly improve performance by reducing the load on the underlying MongoDB or PostgreSQL database\n    # that stores this data.\n    # It is used to set TYK_DB_ENABLEANALYTICSCACHE\n    enableAnalyticsCache: true\n    # Set this value to true if you are planning to use Tyk Sync or Tyk Operator\n    # It is used to set TYK_DB_ALLOWEXPLICITPOLICYID\n    allowExplicitPolicyId: true\n    # oAuth redirect URI separator\n    # It is used to set TYK_DB_OAUTHREDIRECTURISEPARATOR\n    oauthRedirectUriSeparator: \";\"\n    # keyRequestFields enables administrators to collect necessary information for API key issuance, enforce policies,\n    # and provide the flexibility to customize the key request process according to evolving business needs.\n    # It is used to set TYK_DB_KEYREQUESTFIELDS\n    keyRequestFields: \"appName;appType\"\n    # Dashboard session lifetime\n    # It is used to set TYK_DB_DASHBOARDSESSIONLIFETIME\n    dashboardSessionLifetime: 43200\n    # When enabled, if dashboard already have user with given email found, it will be used for the login process\n    # It is used to set TYK_DB_SSOENABLEUSERLOOKUP\n    ssoEnableUserLookup: true\n    # notificationsListenPort specifies the port that the Tyk Dashboard listens on for webhook notifications sent from Tyk Gateways.\n    # It is used to set TYK_DB_NOTIFICATIONSLISTENPORT\n    notificationsListenPort: 5000\n    # To delete a key by its hash, set this option to true\n    # It is used to set TYK_DB_ENABLEDELETEKEYBYHASH\n    enableDeleteKeyByHash: true\n    # To update a key by its hash, set this option to true.\n    # It is used to set TYK_DB_ENABLEUPDATEKEYBYHASH\n    enableUpdateKeyByHash: true\n    # To retrieve a list of all key hash listings, set this option to true.\n    # It is used to set TYK_DB_ENABLEHASHEDKEYSLISTING\n    enableHashedKeysListing: true\n    # Enable support for users with the same email for multiple organisations\n    # It is used to set TYK_DB_ENABLEMULTIORGUSERS\n    enableMultiOrgUsers: true\n\n\n    # replicaCount specifies number of replicas to be created if kind is Deployment.\n    replicaCount: 1\n\n    # podAnnotations is annotations to be added to Tyk Dashboard pod.\n    # It takes key-value pairs.\n    # There are no required annotation field for Tyk Dashboard.\n    #\n    # podAnnotations:\n    #   yourkey: value\n    #   image: yourhub\n    podAnnotations: {}\n\n    # podLabels specifies labels to be added in dashboard Pod\n    podLabels: {}\n\n    image:\n      # image repository for Tyk Dashboard.\n      repository: tykio/tyk-dashboard\n\n      # tag for Tyk Dashboard\n      tag: v5.3.6\n\n      # image pull policy\n      pullPolicy: Always\n\n    # image pull secrets to use when pulling images from repository\n    imagePullSecrets: []\n\n    service:\n      type: ClusterIP\n      externalTrafficPolicy: Local\n      annotations: {}\n\n    # We usually recommend not to specify default resources and to leave this\n    # as a conscious choice for the user. This also increases chances charts\n    # run on environments with little resources, such as Minikube. If you do\n    # want to specify resources, uncomment the following lines, adjust them\n    # as necessary, and remove the curly braces after 'resources:'.\n    #  resources:\n    #   limits:\n    #    cpu: 100m\n    #    memory: 128Mi\n    #   requests:\n    #    cpu: 100m\n    #    memory: 128Mi\n    resources: {}\n\n    # securityContext holds pod-level security attributes for Tyk Dashboard pod. All fields from PodSecurityContext object can be added here.\n    securityContext:\n      runAsUser: 1000\n      fsGroup: 2000\n      runAsNonRoot: true\n\n    # containerSecurityContext holds container-level security attributes for Tyk Dashboard container. All fields from SecurityContext object can be added here.\n    containerSecurityContext:\n      runAsNonRoot: true\n      runAsUser: 1000\n      allowPrivilegeEscalation: false\n      privileged: false\n      readOnlyRootFilesystem: true\n      seccompProfile:\n        type: RuntimeDefault\n      capabilities:\n        drop:\n          - ALL\n\n    # nodeSelector is a selector which must be true for Tyk Dashboard pod to fit on a specific node.\n    nodeSelector: {}\n    # tolerations specifies tolerations to be applied on Tyk Dashboard pods.\n    tolerations: []\n    # affinity specifies affinity and anti-affinity constraints.\n    affinity: {}\n\n    # extraEnvs is used to set extra environment variables to Tyk Dashboard pod.\n    # - name: TYK_DB_PAGESIZE\n    #   value: \"10\"\n    extraEnvs: []\n\n    # extraVolumes is a list of volumes to be added to the pod\n    # extraVolumes:\n    #   - name: ca-certs\n    #     secret:\n    #       defaultMode: 420\n    #       secretName: ca-certs\n    extraVolumes: []\n\n    # extraVolumeMounts is a list of volume mounts to be added to the pod\n    # extraVolumeMounts:\n    #   - name: ca-certs\n    #     mountPath: /etc/ssl/certs/ca-certs.crt\n    #     readOnly: true\n    extraVolumeMounts: []\n\n    # The hostname to bind the Dashboard to.\n    hostName: tyk-dashboard.local\n\n    tls:\n      # The name of the secret which should contain the TLS certificate you want to use with the dashboard deployment\n      secretName: tyk-default-tls-secret\n      # This options allows you to skip verifying the TLS certificate. This is typically enabled when using self-signed certs.\n      insecureSkipVerify: false\n\n      # certificatesMountPath corresponds to the mount path of the secret.\n      certificatesMountPath: \"/etc/certs/tyk-dashboard\"\n      # certificates is an array of strings, used to set TYK_DB_HTTPSERVEROPTIONS_CERTIFICATES\n      certificates:\n        - domain_name: \"*\"\n          cert_file: \"/etc/certs/tyk-dashboard/tls.crt\"\n          key_file: \"/etc/certs/tyk-dashboard/tls.key\"\n\n    # ingress specifies Ingress rules for Tyk Dashboard Service.\n    # Ingress is disabled by default.\n    ingress:\n      enabled: false\n      # specify your ingress controller class name below\n      className: \"\"\n      annotations: {}\n        # kubernetes.io/ingress.class: nginx\n      # kubernetes.io/tls-acme: \"true\"\n      hosts:\n        - host: chart-example.local\n          paths:\n            - path: /\n              pathType: ImplementationSpecific\n      tls: []\n\n  portal:\n    ingress:\n      enabled: false\n      # specify your ingress controller class name below\n      className: \"\"\n      annotations: {}\n        # kubernetes.io/ingress.class: nginx\n      # kubernetes.io/tls-acme: \"true\"\n      hosts:\n        - host: chart-example.local\n          paths:\n            - path: /\n              pathType: ImplementationSpecific\n      tls: []\n\n  # tib is used to configure Tyk Identity Broker(TIB) connection details\n  tib:\n    # enabled is used to enable/disable embedded TIB\n    enabled: false\n\ntyk-mdcb:\n  mdcb:\n    # nameOverride overrides the Chart name. It is truncated to 63 characters.\n    nameOverride: \"\"\n    # fullnameOverride overrides App name. It is truncated to 63 characters.\n    fullnameOverride: \"\"\n\n  # useSecretName can be used if you don't want to store plaintext values for MDCB license and security secret in\n  # the Helm values file and would rather provide the k8s Secret externally.\n  # You should set following fields in the secret\n  # - MDCBLicense - Sets MDCB license key\n  # - securitySecret - Sets secret required for accessing secure HTTP endpoints\n    useSecretName: \"\"\n\n    # Tyk MDCB license\n    # It is used to set TYK_MDCB_LICENSE\n    license: \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJTS1UiOiJUeWstTURDQi1FTlQiLCJleHAiOjE3MzMxODM5OTksIm93bmVyIjoiNjFjY2U2MmMxMjFjYTEwMDAxOGJiMTkwIn0.FJlvKQ7ADots-9nfniH8YgiBTh4gV0IY9ik805SyS8ragnXRdrvLFCnWZcn0l7WftSRXZAJEboXzpjzqnu6BhI63ZySAKc5qrjokLx8iMxLZoxQg2Xy4XPqqApZkbHDxGd3gWSRXX5eYDYJ2qAGW_7vXqRimSvF4bHLxFLAdoZdTCBf5fVNq3VBbJNTgn53FLCouMHpBqy7ZBKiwLTgddixj6e6-WmZyRcwld80DFtqMTvknaGR2Ma6l3pqnu67p_kAGN5sitcBZhF-PBGJElT8JnmayWAazk-FG3GdYqo4bxuuz1iL0zLofNSfOO5aR45Dr7LWtHztCgXbWZsyHuA\"\n\n    # The rpc port which worker gateways will connect to.\n    # This opens a port on MDCB container and MDCB service targets this port.\n    # It is used to set TYK_MDCB_LISTENPORT\n    listenPort: 9091\n\n    # When it is set to true, instead of sending analytics directly to MongoDB / SQL\n    # MDCB can send analytics to Redis. This will allow tyk-pump to pull\n    # analytics from Redis and send to your own data sinks.\n    # It is used to set TYK_MDCB_FORWARDANALYTICSTOPUMP\n    forwardAnalyticsToPump: false\n\n    # This enables saving analytics in multiple keys as oppose to just having one.\n    # It is useful when using a Redis cluster.\n    # It also only works when TYK_MDCB_FORWARDANALYTICSTOPUMP is set to true.\n    enableMultipleAnalyticsKey: true\n\n    # This should be set to true if you choose not to store selective analytics\n    dontStoreSelective: false\n\n    # This should be set to true if you choose not to store aggregate analytics\n    dontStoreAggregate: false\n\n    # If set to true then it will not store analytics for tags having prefix specified in the list.\n    # NB: Prefix “key-” is added in the list by default. This tag is added by gateway for keys.\n    ignoreTagPrefixList: []\n\n    # If enabled, it will store analytics for all the endpoints, irrespective of Track Endpoint plugin.\n    trackAllPaths: false\n\n    # If enabled, aggregate data will be generated per minute.\n    storeAnalyticsPerMinute: false\n    httpServerOptions:\n      # if enabled then the endpoints will be served over https\n      useSSL: false\n      # certificateKeyFile: /path-to-cert-keyfile\n      # certificateCertFile: /path-to-certfile\n      # For TLS 1.0 use 769, for TLS 1.1 use 770, for TLS 1.2 use 771, for TLS 1.3 use 772\n      # minVersion: 771\n\n    # Security configures various security-related options for the MDCB (Multi Data Center Bridge).\n    # It includes settings for enabling mutual TLS, securing HTTP endpoints, and managing access secrets.\n    security:\n      # Secret is the key required for accessing secure HTTP endpoints and must be included as the `X-Tyk-Authorization` header.\n      # Ensure confidentiality of the key and avoid exposing management endpoints publicly.\n      # This field can be set using k8s secret. Please refer `mdcb.useSecretName` field.\n      secret: CHANGEME\n      # EnableHTTPSecureEndpoints enables HTTP endpoints for monitoring and debugging MDCB.\n      # Secure endpoints providing critical system information are disabled by default for security enhancement.\n      # Authentication via the `Secret` is required for access, e.g., /dataplanes for dataplane details.\n      enableHttpSecureEndpoints: false\n\n    # This is the preferred port setting for MDCB \u003e= v2.6.0.\n    # Users should use httpPort instead of probes.healthCheckPort for newer versions.\n    # This value is used to set TYK_MDCB_HTTPPORT when MDCB is \u003e= 2.6.0.\n    httpPort: 8181\n    # settings for the health checker\n    healthcheck:\n      # represents the time interval (in seconds) at which the healthchecker refreshes its cached health status information (redis and DB).\n      cache_renewal_period: 10\n    probes:\n      # This port lets MDCB allow standard health checks.\n      # It also defines the path for liveness and readiness probes.\n      # It is used to set TYK_MDCB_HEALTHCHECKPORT and TYK_MDCB_HTTPPORT when mdcb \u003e= v2.6.0\n      # This field will be deprecated in upcoming release. Use `httpPort` instead.\n      # healthCheckPort: 8181\n\n      # liveness includes details about liveness probe used in MDCB Deployment.\n      liveness:\n        # path represents the http path to be used in liveness probe in MDBC deployment.\n        path: \"/liveness\"\n        # initialDelaySeconds specifies duration in seconds used in liveness probe as initial delay.\n        initialDelaySeconds: 5\n        # The periodSeconds specifies the duration in seconds to perform a liveness probe.\n        periodSeconds: 2\n        # timeoutSeconds represents the number of seconds after which the probe times out.\n        timeoutSeconds: 3\n        # failureThreshold represents the consecutive number of failures in a row for Kubernetes to consider that the overall check has failed.\n        failureThreshold: 2\n      # readiness includes details about readiness probe used in MDCB Deployment.\n      readiness:\n        # path represents the http path to be used in readiness probe in MDBC deployment.\n        path: \"/readiness\"\n        # initialDelaySeconds specifies the seconds used in readiness probe as initial delay.\n        initialDelaySeconds: 1\n        # The periodSeconds specifies the duration in seconds to perform a readiness probe.\n        periodSeconds: 10\n        # timeoutSeconds represents the number of seconds after which the probe times out.\n        timeoutSeconds: 3\n        # failureThreshold represents the consecutive number of failures in a row for Kubernetes to consider that the overall check has failed.\n        failureThreshold: 3\n\n    # replicaCount specifies number of replicas to be created.\n    replicaCount: 1\n\n    image:\n      # image repository for Tyk MDCB\n      repository: tykio/tyk-mdcb-docker\n      # image tag for Tyk MDCB\n      tag: v2.7.1\n      # image pull policy\n      pullPolicy: IfNotPresent\n\n    # image pull secrets to use when pulling images from repository\n    imagePullSecrets: []\n\n    # podAnnotations specifies annotations to be added in MDCB Pod\n    podAnnotations: {}\n    # podLabels specifies labels to be added in MDCB Pod\n    podLabels: {}\n\n    serviceAccount:\n      # Specifies whether a service account should be created\n      enabled: false\n      # Automatically mount a ServiceAccount's API credentials?\n      automount: true\n      # Annotations to add to the service account\n      annotations: {}\n      # The name of the service account to use.\n      # If not set and create is true, a name is generated using the fullname template\n      name: \"\"\n\n\n    # securityContext holds pod-level security attributes for Tyk MDCB pod. All fields from PodSecurityContext object can be added here.\n    podSecurityContext: {}\n    # fsGroup: 2000\n\n    # containerSecurityContext holds container-level security attributes for Tyk MDCB container. All fields from SecurityContext object can be added here.\n    containerSecurityContext: {}\n      # runAsNonRoot: true\n      # runAsUser: 1000\n      # allowPrivilegeEscalation: false\n      # privileged: false\n      # readOnlyRootFilesystem: true\n      # seccompProfile:\n      #   type: RuntimeDefault\n      # capabilities:\n      #   drop:\n      #     - ALL\n\n    service:\n      # type corresponds to the service type of Tyk MDCB Service.\n      type: ClusterIP\n      # The port at which the MDCB service can be found\n      port: 9091\n      # externalTrafficPolicy corresponds to the external traffic policy if the service type is load balancer\n      externalTrafficPolicy: Local\n      # annotations corresponds to the annotations which will be added into Tyk Dashboard Service.\n      annotations: {}\n\n    # ingress specifies Ingress rules for Tyk MDCB Service.\n    # Ingress is disabled by default.\n    ingress:\n      # enabled specifies whether ingress is enabled or not.\n      # Set it to true to enable Ingress for Tyk MDCB Service.\n      enabled: false\n      # className specifies your ingress controller class name below\n      className: \"\"\n      # annotations specifies annotations to be added on Ingress resource.\n      annotations: {}\n      # kubernetes.io/ingress.class: nginx\n      # kubernetes.io/tls-acme: \"true\"\n      # hosts corresponds to the rules to be added on Ingress rules.\n      hosts:\n        - host: chart-example.local\n          paths:\n            - path: /\n              pathType: ImplementationSpecific\n      # tls corresponds to the tls configuration if Ingress rules use TLS\n      tls: []\n      #  - secretName: chart-example-tls\n      #    hosts:\n      #      - chart-example.local\n\n    # New HTTP ingress for port 8181\n    http_ingress:\n      enabled: false\n      # className specifies your ingress controller class name below\n      className: \"\"\n      # annotations specifies annotations to be added on Ingress resource.\n      annotations: {}\n      # kubernetes.io/ingress.class: nginx\n      # kubernetes.io/tls-acme: \"true\"\n      # hosts corresponds to the rules to be added on Ingress rules.\n      hosts:\n        - host: mdcb-http.example.com\n          paths:\n            - path: /\n              pathType: ImplementationSpecific\n      # tls corresponds to the tls configuration if Ingress rules use TLS\n      tls: []\n      #  - secretName: chart-example-tls\n      #    hosts:\n      #      - chart-example.local\n\n    resources: {}\n    # We usually recommend not to specify default resources and to leave this as a conscious\n    # choice for the user. This also increases chances charts run on environments with little\n    # resources, such as Minikube. If you do want to specify resources, uncomment the following\n    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n    # limits:\n    #   cpu: 100m\n    #   memory: 128Mi\n    # requests:\n    #   cpu: 100m\n    #   memory: 128Mi\n\n    # autoscaling configuration\n    autoscaling:\n      enabled: false\n      minReplicas: 1\n      maxReplicas: 100\n      targetCPUUtilizationPercentage: 80\n      # targetMemoryUtilizationPercentage: 80\n\n    extraEnvs: []\n\n    # Additional volumes on the output MDCB Deployment definition.\n    extraVolumes: []\n    # - name: foo\n    #   secret:\n    #     secretName: mysecret\n    #     optional: false\n\n    # Additional volumeMounts on the output MDCB Deployment definition.\n    extraVolumeMounts: []\n    # - name: foo\n    #   mountPath: \"/etc/foo\"\n    #   readOnly: true\n\n    # node labels for MDCB pod assignment\n    nodeSelector: {}\n\n    # tolerations for MDCB pod assignment\n    tolerations: []\n\n    # affinity for MDCB pod assignment\n    affinity: {}\n\n    tls:\n      # enables ssl for mdcb\n      useSSL: false\n\n      # the path to where the keys will be mounted in the pod\n      certificatesMountPath: \"/etc/certs\"\n\n      # location to pem encoded private key\n      certificateKeyFile: \"/etc/certs/tls.key\"\n\n      # location to pem encoded certificate\n      certificateCertFile: \"/etc/certs/tls.crt\"\n\n      # the name of the secret\n      secretName: \"mdcb-tls-secret\"\n\n      # the name of the volume\n      volumeName: \"mdcb-tls-secret-volume\"\n\n\ntyk-dev-portal:\n  # Sensitive configuration of Portal could be set using k8s secret\n  # You can set following fields:\n  # - DevPortalLicense - Sets LicenseKey for Developer Portal\n  # - DevPortalDatabaseConnectionString - Sets database connectionString for Developer Portal\n  # - DevPortalAwsAccessKeyId - Sets AWS S3 Access Key ID\n  # - DevPortalAwsSecretAccessKey - Sets AWS S3 Secret Access Key\n  useSecretName: \"\"\n  # The hostname to bind the Developer Portal to.\n  hostName: tyk-dev-portal.local\n  # Developer Portal license.\n  license: \"\"\n  # Developer portal can be deployed as StatefulSet or as Deployment\n  kind: StatefulSet\n  storage:\n    # User can set the storage type for portal.\n    # Supported types: fs, s3, db\n    type: \"db\"\n    # Configuration values for using s3 as storage for Tyk Developer Portal\n    # In case you want to provide the key ID and access key via secrets please\n    # refer to the existing secret inside the helm chart or the\n    # .Values.useSecretName field\n    s3:\n      awsAccessKeyid: your-access-key\n      awsSecretAccessKey: your-secret-key\n      region: sa-east-1\n      endpoint: https://s3.sa-east-1.amazonaws.com\n      bucket: your-portal-bucket\n      acl: private\n      presign_urls: true\n    persistence:\n      mountExistingPVC: \"\"\n      storageClass: \"\"\n      accessModes:\n        - ReadWriteOnce\n      size: 8Gi\n      annotations: {}\n      labels: {}\n      selector: {}\n  database:\n    # This selects the SQL dialect to be used\n    # The supported values are mysql, postgres and sqlite3\n    dialect: \"sqlite3\"\n    connectionString: \"db/portal.db\"\n    enableLogs: false\n    maxRetries: 3\n    retryDelay: 5000\n\n  # replicaCount specifies number of replicas to be created if kind is Deployment.\n  replicaCount: 1\n\n  # containerPort specifies the container port for Tyk Developer Portal container.\n  # Also, it is used to set PORTAL_HOST_PORT\n  containerPort: 3001\n  image:\n    # image repository for Tyk Developer Portal.\n    repository: tykio/portal\n\n    # Developer portal \u003c v1.2 is not supported\n    tag: v1.10.0\n    # image pull policy\n    pullPolicy: Always\n\n  # image pull secrets to use when pulling images from repository\n  imagePullSecrets: []\n\n  service:\n    # type corresponds to the service type of Tyk Developer Portal Service.\n    type: ClusterIP\n    # The port at which Tyk Developer Portal service can be found\n    port: 3001\n    # externalTrafficPolicy corresponds to the external traffic policy if the service type is load balancer\n    externalTrafficPolicy: Local\n    # annotations corresponds to the annotations which will be added into Tyk Dashboard Service.\n    annotations: {}\n\n  # ingress specifies Ingress rules for Tyk Developer Portal Service.\n  # Ingress is disabled by default.\n  ingress:\n    # enabled specifies whether ingress is enabled or not.\n    # Set it to true to enable Ingress for Tyk Dashboard Service.\n    enabled: false\n    # specify your ingress controller class name below\n    className: \"\"\n\n    # annotations specifies annotations to be added on Ingress resource.\n    annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n\n    # hosts corresponds to the rules to be added on Ingress rules.\n    hosts:\n      - host: chart-example.local\n        paths:\n          - path: /\n            pathType: ImplementationSpecific\n\n    # tls corresponds to the tls configuration if Ingress rules use TLS\n    tls: []\n\n  resources: {}\n    # We usually recommend not to specify default resources and to leave this\n    # as a conscious choice for the user. This also increases chances charts\n    # run on environments with little resources, such as Minikube. If you do\n    # want to specify resources, uncomment the following lines, adjust them\n    # as necessary, and remove the curly braces after 'resources:'.\n    # limits:\n    #  cpu: 100m\n    #  memory: 128Mi\n    # requests:\n    #  cpu: 100m\n  #  memory: 128Mi\n\n  # securityContext holds pod-level security attributes for Tyk Developer Portal pod. All fields from PodSecurityContext object can be added here.\n  securityContext:\n    runAsUser: 1000\n    fsGroup: 2000\n    runAsNonRoot: true\n\n  # containerSecurityContext holds container-level security attributes for Tyk Developer Portal pod. All fields from SecurityContext object can be added here.\n  containerSecurityContext:\n    runAsNonRoot: true\n    runAsUser: 1000\n    allowPrivilegeEscalation: false\n    privileged: false\n    readOnlyRootFilesystem: true\n    seccompProfile:\n      type: RuntimeDefault\n    capabilities:\n      drop:\n        - ALL\n  # nodeSelector is a selector which must be true for Tyk Developer Portal pod to fit on a specific node.\n  nodeSelector: {}\n  # tolerations specifies tolerations to be applied on Tyk Developer Portal pods.\n  tolerations: []\n  # affinity specifies affinity and anti-affinity constraints.\n  affinity: {}\n  # extraEnvs is used to set extra environment variables to Tyk Developer Portal pod.\n  # - name: PORTAL_REFRESHINTERVAL\n  #   value: \"10\"\n  extraEnvs: []\n  # extraVolumes is a list of volumes to be added to the pod\n  # extraVolumes:\n  #   - name: ca-certs\n  #     secret:\n  #       defaultMode: 420\n  #       secretName: ca-certs\n  extraVolumes: []\n  # extraVolumeMounts is a list of volume mounts to be added to the pod\n  # extraVolumeMounts:\n  #   - name: ca-certs\n  #     mountPath: /etc/ssl/certs/ca-certs.crt\n  #     readOnly: true\n  extraVolumeMounts: []\n\n  # livenessProve includes details about liveness probe used in Tyk Developer Portal\n  livenessProbe:\n    # initialDelaySeconds specifies the seconds used in liveness probe as initial delay.\n    initialDelaySeconds: 60\n\n  # readinessProbe includes details about readiness probe used in Tyk Developer Portal\n  readinessProbe:\n    # initialDelaySeconds specifies the seconds used in readiness probe as initial delay.\n    initialDelaySeconds: 60\n\n  # podAnnotations specifies annotations to be added in Tyk Developer Portal Pod\n  # It takes key-value pairs.\n  # There are no required annotation field for Tyk Developer Portal.\n  #\n  # podAnnotations:\n  #   yourkey: value\n  #   image: yourhub\n  podAnnotations: {}\n\n  # podLabels specifies labels to be added in Tyk Developer Portal Pod\n  podLabels: {}\n\n"
            ],
            "verify": false,
            "version": "2.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "set"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.mongo",
            "helm_release.redis",
            "kubernetes_namespace.tyk_cp",
            "random_password.mongo_password",
            "random_password.redis_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "tyk_dp",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "tyk-data-plane",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "tyk-data-plane",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "",
                "chart": "tyk-data-plane",
                "name": "tyk-data-plane",
                "namespace": "tyk-dp",
                "revision": 1,
                "values": "{\"fullnameOverride\":\"\",\"global\":{\"components\":{\"pump\":true},\"hashKeys\":true,\"mdcbSynchronizer\":{\"enabled\":false,\"keySpaceSyncInterval\":10},\"oasValidateExamples\":false,\"oasValidateSchemaDefaults\":false,\"redis\":{\"addrs\":[\"tyk-redis-dp-master.tyk-dp.svc.cluster.local:6379\"],\"pass\":\"sebbYCyd3kbODDBv\",\"storage\":{\"database\":0}},\"remoteControlPlane\":{\"connectionString\":\"mdcb-svc-tyk-cp-tyk-mdcb.tyk-cp.svc:9091\",\"enabled\":true,\"groupID\":\"NY\",\"orgId\":\"6726f01f759d1a0001c88afd\",\"sslInsecureSkipVerify\":true,\"useSSL\":false,\"useSecretName\":\"\",\"userApiKey\":\"9b9ee3c7e2ce4cfe49f1305856447511\"},\"secrets\":{\"APISecret\":\"CHANGEME\",\"useSecretName\":\"\"},\"servicePorts\":{\"gateway\":8080},\"tls\":{\"gateway\":false,\"useDefaultTykCertificate\":true}},\"nameOverride\":\"\",\"tyk-gateway\":{\"fullnameOverride\":\"\",\"gateway\":{\"affinity\":{},\"analyticsConfigType\":\"\",\"analyticsEnabled\":\"\",\"autoscaling\":{},\"containerPort\":8080,\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"control\":{\"annotations\":{},\"containerPort\":9696,\"enabled\":false,\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example-control-api-domain.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"port\":9696,\"type\":\"ClusterIP\"},\"enableFixedWindowRateLimiter\":false,\"enablePathPrefixMatching\":true,\"enablePathSuffixMatching\":true,\"enableStrictRoutes\":true,\"extraEnvs\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"hostName\":\"tyk-gw.local\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"tykio/tyk-gateway\",\"tag\":\"v5.3.6\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"initContainers\":{\"setupDirectories\":{\"repository\":\"busybox\",\"resources\":{},\"tag\":1.32}},\"kind\":\"Deployment\",\"nodeSelector\":{},\"opentelemetry\":{\"connectionTimeout\":1,\"contextPropagation\":\"tracecontext\",\"enabled\":false,\"endpoint\":\"localhost:4317\",\"exporter\":\"grpc\",\"headers\":{},\"resourceName\":\"tyk\",\"sampling\":{\"parentBased\":false,\"rate\":0.5,\"type\":\"AlwaysOn\"},\"spanProcessorType\":\"batch\",\"tls\":{\"caFileName\":\"\",\"certFileName\":\"\",\"certificateSecretName\":\"\",\"enabled\":false,\"insecureSkipVerify\":true,\"keyFileName\":\"\",\"maxVersion\":1.3,\"minVersion\":1.2,\"secretMountPath\":\"\"}},\"pdb\":{\"enabled\":false,\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podAnnotations\":{},\"podLabels\":{},\"replicaCount\":1,\"resources\":{},\"securityContext\":{\"fsGroup\":2000,\"runAsNonRoot\":true,\"runAsUser\":1000},\"service\":{\"annotations\":{},\"externalTrafficPolicy\":\"Local\",\"loadBalancerIP\":\"\",\"type\":\"ClusterIP\"},\"sharding\":{\"enabled\":false,\"tags\":\"\"},\"tls\":{\"certificates\":[{\"cert_file\":\"/etc/certs/tyk-gateway/tls.crt\",\"domain_name\":\"*\",\"key_file\":\"/etc/certs/tyk-gateway/tls.key\"}],\"certificatesMountPath\":\"/etc/certs/tyk-gateway\",\"insecureSkipVerify\":false,\"secretName\":\"tyk-default-tls-secret\"},\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"}]},\"nameOverride\":\"\"},\"tyk-pump\":{\"fullnameOverride\":\"\",\"nameOverride\":\"\",\"pump\":{\"affinity\":{},\"backend\":[\"prometheus\",\"hybrid\"],\"containerPort\":9090,\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"extraEnvs\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"hybridPump\":{\"callTimeout\":10,\"enableAggregateAnalytics\":true,\"poolSize\":5},\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"docker.tyk.io/tyk-pump/tyk-pump\",\"tag\":\"v1.11.0\"},\"imagePullSecrets\":[],\"mongoGraphPump\":{\"collectionName\":\"tyk_graph_analytics\"},\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"prometheusPump\":{\"customMetrics\":\"\",\"host\":\"\",\"path\":\"/metrics\",\"prometheusOperator\":{\"enabled\":false,\"podMonitorSelector\":{\"release\":\"prometheus-stack\"}}},\"replicaCount\":1,\"resources\":{},\"securityContext\":{\"fsGroup\":2000,\"runAsNonRoot\":true,\"runAsUser\":1000},\"service\":{\"annotations\":{},\"enabled\":false,\"externalTrafficPolicy\":\"Local\",\"port\":9090,\"type\":\"ClusterIP\"},\"sqlGraphPump\":{\"tableName\":\"tyk_analytics_graphs\"},\"tolerations\":[],\"uptimePumpBackend\":\"\"}}}",
                "version": "2.1.0"
              }
            ],
            "name": "tyk-data-plane",
            "namespace": "tyk-dp",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.tyk.io/public/helm/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "global.redis.pass",
                "type": "",
                "value": "sebbYCyd3kbODDBv"
              },
              {
                "name": "global.remoteControlPlane.orgId",
                "type": "",
                "value": "6726f01f759d1a0001c88afd"
              },
              {
                "name": "global.remoteControlPlane.userApiKey",
                "type": "",
                "value": "9b9ee3c7e2ce4cfe49f1305856447511"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Default values for tyk-data-plane.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\n# nameOverride overrides the Chart name. It is truncated to 63 characters.\nnameOverride: \"\"\n\n# fullnameOverride overrides App name. It is truncated to 63 characters.\nfullnameOverride: \"\"\n\nglobal:\n  components:\n    # pump determines whether the pump component should be installed.\n    pump: true\n\n  servicePorts:\n    # The port at which the gateway service can be found at\n    gateway: 8080\n\n  remoteControlPlane:\n    # useSecretName can be used if you don't want to store plaintext values for remote control plane configurations in\n    # the Helm value file and would rather provide the k8s Secret externally.\n    # You should set following fields in the secret\n    # - orgId - Sets slave_options.rpc_key of Tyk Gateway\n    # - userApiKey - Sets slave_options.api_key of Tyk Gateway\n    # - groupID - Sets slave_options.group_id of Tyk Gateway\n    useSecretName: \"\"\n\n    enabled: true\n    # connection string used to connect to an MDCB deployment. For Tyk Cloud users, you can get it from Tyk Cloud Console and retrieve the MDCB connection string.\n    connectionString: \"mdcb-svc-tyk-cp-tyk-mdcb.tyk-cp.svc:9091\"\n    # orgID of your dashboard user\n    orgId: \"\"\n    # API key of your dashboard user\n    userApiKey: \"\"\n    # ID to identify this gateway cluster - API events will only work if this is set\n    groupID: \"NY\"\n    # enable/disable ssl\n    useSSL: false\n    # Disables SSL certificate verification\n    sslInsecureSkipVerify: true\n\n  mdcbSynchronizer:\n    # Enable the MDCB Synchroniser\n    # It is used to set TYK_GW_SLAVEOPTIONS_SYNCHRONISERENABLED in Tyk Gateway deployment.\n    enabled: false\n    # keySpaceSyncInterval configures the interval (in seconds) that the worker Gateway will\n    # take to check if there are any changes.\n    # It is used to set TYK_GW_SLAVEOPTIONS_KEYSPACESYNCINTERVAL in Tyk Gateway deployment.\n    keySpaceSyncInterval: 10\n\n  tls:\n    # When true, sets the gateway protocol to HTTPS.\n    gateway: false\n\n    # When true, it will install the certificate present in the templates folder, set to false when using\n    # a custom TLS certificate to avoid overwriting yours\n    useDefaultTykCertificate: true\n\n  secrets:\n    # APISecret sets node_secret and secret in tyk.conf\n    APISecret: CHANGEME\n    # useSecretName can be used if you don't want to store plaintext secrets in the Helm value file and would\n    # rather provide the k8s Secret externally.\n    # You can set following fields in the secret\n    # - APISecret - Sets node_secret and secret in tyk.conf\n    useSecretName: \"\"\n\n  redis:\n    # The addrs value will allow you to set your Redis addresses.\n    #\n    # If you are using Redis (e.g. Bitnami Redis at bitnami/redis) then enter single\n    # endpoint. If using sentinel connection mode for Redis, please update the port number (typically 26379).\n    #\n    # If using a Redis Cluster (e.g. bitnami/redis-cluster), you can list\n    # the endpoints of the redis instances or use the cluster configuration endpoint.\n    #\n    # Default value: redis.{{ .Release.Namespace }}.svc:6379\n    addrs:\n        - tyk-redis-dp-master.tyk-dp.svc.cluster.local:6379\n    #   - tyk-redis-master.tyk.svc:6379\n    #   Example using tyk simple redis chart\n    #   - redis.tyk.svc:6379\n    #   Example using bitnami/redis\n    #   - tyk-redis-master.tyk.svc:6379\n    #   Example using bitnami/redis with sentinel\n    #   - tyk-redis.tyk.svc:26379\n    #   Example using bitnami/redis-cluster\n    #   - tyk-redis-redis-cluster.tyk.svc:6379\n\n    # Redis password\n    # If you're using Bitnami Redis chart (e.g. bitnami/redis) please input\n    # your password in the field below\n    pass: \"\"\n\n    # Redis password can also be provided via a secret. Provide the name of the secret and key below.\n    # passSecret:\n    #   name: \"\"\n    #   keyName: \"\"\n\n    # Enables SSL for Redis connection. Redis instance will have to support that.\n    # Default value: false\n    # useSSL: true\n\n    # Allows usage of self-signed certificates when connecting to an encrypted Redis database.\n    # sslInsecureSkipVerify: false\n\n    # Path to the CA file.\n    # sslCAFile: \"\"\n\n    # The Volume mount path\n    # Default value: /etc/certs\n    # certificatesMountPath: \"\"\n\n    # Path to the cert file.\n    # sslCertFile: \"\"\n\n    # Path to the key file.\n    # sslKeyFile: \"\"\n\n    # Maximum supported TLS version. Valid values are TLS 1.0, 1.1, 1.2, 1.3.\n    # Default value: 1.3\n    # tlsMaxVersion: \"1.3\"\n\n    # Minimum supported TLS version. Valid values are TLS 1.0, 1.1, 1.2, 1.3.\n    # Default value: 1.2\n    # tlsMinVersion: \"1.2\"\n\n    # Name of the tls secret. A secret needs to be created for this manually using the name as specified here\n    # secretName: \"\"\n\n    # Name of the volume where the secret will be mounted\n    # volumeName: \"\"\n\n    # If using \"Redis Cluster\" set enableCluster to true\n    # (e.g. if using bitnami/redis-cluster)\n    # enableCluster: true\n\n    # Enables sentinel connection mode for Redis. If enabled, provide both\n    # mandatory values for sentinelPass and masterName.\n    # enableSentinel: false\n\n    # Redis sentinel password, only required while enableSentinel is true.\n    # For bitnami/redis the same password as Redis above\n    # sentinelPass: \"\"\n\n    # Redis sentinel master name, only required while enableSentinel is true.\n    # For bitnami/redis typically redis-master\n    # masterName: \"\"\n\n    # By default, the database index is 0. Setting the database index is not\n    # supported with redis cluster. As such, if you have enableCluster: true,\n    # then this value should be omitted or explicitly set to 0.\n    storage:\n      database: 0\n\n  # Enables validation of examples in the OAS spec. Defaults to false.\n  # It is used to set TYK_GW_OAS_VALIDATE_EXAMPLES and TYK_DB_OAS_VALIDATE_EXAMPLES\n  oasValidateExamples: false\n  # Enables validation of schema defaults in the OAS spec. Defaults to false.\n  # It is used to set TYK_GW_OAS_VALIDATE_SCHEMA_DEFAULTS and TYK_GW_OAS_VALIDATE_SCHEMA_DEFAULTS\n  oasValidateSchemaDefaults: false\n\n  # Set to true if you are using a hashed configuration installation of Tyk, otherwise set to false.\n  hashKeys: true\n\n\ntyk-gateway:\n  ## Default values for tyk-gateway chart.\n  ## This is a YAML-formatted file.\n  ## Declare variables to be passed into your templates.\n  ## See Tyk Helm documentation for installation details:\n  ## https://tyk.io/docs/tyk-oss/ce-helm-chart/\n  ## Registry for all Tyk images - https://hub.docker.com/u/tykio\n\n  # nameOverride overrides the Chart name. It is truncated to 63 characters.\n  # Default value: tyk-gateway.name\n  nameOverride: \"\"\n\n  # fullnameOverride overrides App name. It is truncated to 63 characters.\n  # Default value: tyk-gateway.fullname\n  fullnameOverride: \"\"\n\n  gateway:\n    # The hostname to bind the Gateway to.\n    hostName: tyk-gw.local\n\n    # EnableFixedWindowRateLimiter enables fixed window rate limiting.\n    # FixedWindow will allow requests up to the configured rate limit,\n    # and then block traffic for the remainder of the window duration.\n    # It has minimal impact on redis, however it will not protect against\n    # traffic spikes, it does not have spike arrest behaviour.\n    enableFixedWindowRateLimiter: false\n\n    tls:\n      # The name of the secret which should contain the TLS certificate you want to use with the gateway deployment\n      secretName: tyk-default-tls-secret\n      # This options allows you to skip verifying the TLS certificate. This is typically enabled when using self-signed certs.\n      insecureSkipVerify: false\n\n      # certificatesMountPath corresponds to the mount path of the secret.\n      certificatesMountPath: \"/etc/certs/tyk-gateway\"\n      # certificates is an array of strings, used to set TYK_GW_HTTPSERVEROPTIONS_CERTIFICATES\n      certificates:\n        - domain_name: \"*\"\n          cert_file: \"/etc/certs/tyk-gateway/tls.crt\"\n          key_file: \"/etc/certs/tyk-gateway/tls.key\"\n\n    # kind is type of k8s object to be created for gateway.\n    kind: Deployment\n\n    # podAnnotations is annotations to be added to Tyk Gateway pod.\n    # It takes key-value pairs.\n    # There are no required annotation field for Tyk Gateway.\n    #\n    # podAnnotations:\n    #   yourkey: value\n    #   image: yourhub\n    podAnnotations: {}\n\n    # podLabels specifies labels to be added in gateway Pod\n    podLabels: {}\n\n    # replicaCount specifies number of replicas to be created if kind is Deployment.\n    replicaCount: 1\n\n    # autoscaling configuration if kind IS NOT DaemonSet\n    autoscaling: {}\n    #  enabled: true\n    #  minReplicas: 1\n    #  maxReplicas: 3\n    #  averageCpuUtilization: 60\n    #  averageMemoryUtilization: null\n    #  autoscalingTemplate:\n    #   Custom or additional autoscaling metrics\n    #   ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-custom-metrics\n    #    - type: Pods\n    #      pods:\n    #        metric:\n    #          name: nginx_ingress_controller_nginx_process_requests_total\n    #        target:\n    #          type: AverageValue\n    #          averageValue: 10000m\n\n    image:\n      # image repository for Tyk Gateway\n      repository: tykio/tyk-gateway\n\n      # image tag for Tyk Gateway\n      tag: v5.3.6\n\n      # image pull policy for Tyk Gateway\n      pullPolicy: IfNotPresent\n\n    initContainers:\n      # image configuration for the initContainer that setups up the tyk directory structure\n      setupDirectories:\n        repository: busybox\n        tag: 1.32\n        resources: {}\n        # If you do want to specify resources, uncomment the following\n        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n        # limits:\n        #   cpu: 100m\n        #   memory: 128Mi\n        # requests:\n        #   cpu: 100m\n        #   memory: 128Mi\n\n    # image pull secrets to use when pulling images from repository\n    imagePullSecrets: []\n\n    # The port which will be exposed on the container for tyk-gateway\n    containerPort: 8080\n\n    service:\n      # type of service\n      type: ClusterIP\n\n      # external traffic policy of the service. Set it only if you are using LoadBalancer service type\n      externalTrafficPolicy: Local\n\n      # specify loadBalancerIP if the service type is load balancer\n      loadBalancerIP: \"\"\n\n      # annotations for service\n      annotations: {}\n\n    control:\n      # If enabled, exposes control port of the gateway\n      enabled: false\n\n      # control port of gateway\n      containerPort: 9696\n\n      # port number for control port service\n      port: 9696\n\n      # service type for control port service\n      type: ClusterIP\n\n      # annotations for control port service\n      annotations: {}\n\n      # Create an ingress object for control API of Tyk Gateway\n      ingress:\n        # if enabled, creates an ingress resource for the gateway control\n        enabled: false\n\n        # specify ingress controller class name\n        className: \"\"\n\n        # annotations for ingress\n        annotations: {}\n\n        # ingress rules\n        hosts:\n          - host: chart-example-control-api-domain.local\n            paths:\n              - path: /\n                pathType: ImplementationSpecific\n\n        # tls configuration for ingress\n        #  - secretName: chart-example-tls\n        #    hosts:\n        #      - chart-example-different-domain-possible.local\n        tls: []\n\n    # Creates an ingress object in k8s. Will require an ingress-controller and\n    # annotation to that ingress controller.\n    ingress:\n      # if enabled, creates an ingress resource for the gateway\n      enabled: false\n\n      # specify ingress controller class name\n      className: \"\"\n\n      # annotations for ingress\n      annotations: {}\n\n      # ingress rules\n      hosts:\n        - host: chart-example.local\n          paths:\n            - path: /\n              pathType: ImplementationSpecific\n\n      # tls configuration for ingress\n      #  - secretName: chart-example-tls\n      #    hosts:\n      #      - chart-example.local\n      tls: []\n\n    # PodDisruptionBudget configuration\n    pdb:\n      enabled: false\n      # minAvailable and maxUnavailable configure thresholds for PodDisruptionBudget resource\n      # per PodDisruptionBudget spec they are mutually exclusive, but this chart allows\n      # setting them both, in which case minAvailable will take precedence\n      minAvailable: \"\"\n      maxUnavailable: \"\"\n\n    # We usually recommend not to specify default resources and to leave this\n    # as a conscious choice for the user. This also increases chances charts\n    # run on environments with little resources, such as Minikube. If you do\n    # want to specify resources, uncomment the following lines, adjust them\n    # as necessary, and remove the curly braces after 'resources:'.\n    # limits:\n    #  cpu: 100m\n    #  memory: 128Mi\n    # requests:\n    #  cpu: 100m\n    #  memory: 128Mi\n    resources: {}\n\n    # securityContext values for gateway pod. All fields from PodSecurityContext object can be added here.\n    securityContext:\n      runAsUser: 1000\n      fsGroup: 2000\n      runAsNonRoot: true\n\n    # containerSecurityContext values for gateway container. All fields from SecurityContext object can be added here.\n    containerSecurityContext:\n      runAsNonRoot: true\n      runAsUser: 1000\n      allowPrivilegeEscalation: false\n      privileged: false\n      readOnlyRootFilesystem: true\n      seccompProfile:\n        type: RuntimeDefault\n      capabilities:\n        drop:\n          - ALL\n\n    # node labels for gateway pod assignment\n    nodeSelector: {}\n\n    # tolerations for gateway pod assignment\n    tolerations:\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n\n    # affinity for gateway pod assignment\n    affinity: {}\n\n    # extraEnvs is used to set gateway env variables\n    # - name: TYK_GW_HTTPSERVEROPTIONS_SSLINSECURESKIPVERIFY\n    #   value: \"true\"\n    extraEnvs: []\n\n    # Sharding gateway allows you to selectively load APIs to specific gateways.\n    # Also be sure to match API segmentation tags with the tags selected below.\n    sharding:\n      enabled: false\n      tags: \"\"\n\n    # analyticsEnabled property is used to enable/disable analytics.\n    # If set to empty or nil, analytics will be enabled/disabled based on `global.components.pump`.\n    analyticsEnabled: \"\"\n\n    # used to decide whether to send the results back directly to Tyk without a hybrid pump\n    # if you want to send analytics to control plane instead of pump, change value to \"rpc\"\n    analyticsConfigType: \"\"\n\n    # opentelemetry is used to configure opentelemetry for Tyk Gateway\n    opentelemetry:\n      # Used to enable/disable opentelemetry\n      enabled: false\n      # exporter is used to define the type of the exporter to sending data in OTLP protocol\n      # Valid values are \"grpc\" or \"http\"\n      exporter: grpc\n      # endpoint defines OpenTelemetry collector endpoint to connect to.\n      endpoint: localhost:4317\n      # A map of headers that will be sent with HTTP requests to the collector.\n      # It should be set to map of string to string\n      headers: {}\n      # Timeout for establishing a connection to the collector\n      connectionTimeout: 1\n      # Name of the resource that will be used to identify the resource.\n      resourceName: tyk\n      # Type of the span processor to use. Valid values are “simple” or “batch”.\n      spanProcessorType: batch\n      # Type of the context propagator to use. Valid values are \"tracecontext\" and \"b3\".\n      contextPropagation: tracecontext\n      # TLS configuration for the exporter.\n      tls:\n        # Flag that can be used to enable TLS\n        enabled: false\n        # Flag that can be used to skip TLS verification if TLS is enabled\n        insecureSkipVerify: true\n        # Maximum TLS version that is supported.\n        maxVersion: 1.3\n        # Minimum TLS version that is supported\n        minVersion: 1.2\n        # Path to the cert file\n        certFileName: \"\"\n        # Path to the key file\n        keyFileName: \"\"\n        # Path to CA file\n        caFileName: \"\"\n        # Existing secret that stores TLS and CA Certificate\n        certificateSecretName: \"\"\n        # Mount path on which certificate secret should be mounted\n        secretMountPath: \"\"\n      sampling:\n        # Refers to the policy used by OpenTelemetry to determine whether a particular trace should be sampled or not.\n        type: \"AlwaysOn\"\n        # Parameter for the TraceIDRatioBased sampler type and represents the percentage of traces to be sampled.\n        rate: 0.5\n        # Rule that ensures that if we decide to record data for a particular operation, we’ll also record data for\n        # all the subsequent work that operation causes\n        parentBased: false\n\n    # EnablePathPrefixMatching changes the URL matching from wildcard mode to prefix mode.\n    # If prefix matching is enabled, the match will be performed\n    # - as a prefix match (/json*).\n    # - against the full listen path and versioning URL (/listen-path/v4/json)\n    # - the stripped listen path URL (/v4/json), and the stripped version information (/json).\n    enablePathPrefixMatching: true\n    # EnablePathSuffixMatching changes the URL matching to match as a suffix.\n    # For example, /json is matched as /json$ against\n    # - the full listen path and versioning URL (/listen-path/v4/json)\n    # - the stripped listen path URL (/v4/json)\n    # - the stripped version information (/json)\n    enablePathSuffixMatching: true\n    # EnableStrictRoutes changes the routing to avoid nearest-neighbour requests on overlapping routes\n    # - if disabled, `/apple` will route to `/app`, the current default behavior,\n    # - if enabled, `/app` only responds to `/app`, `/app/` and `/app/*` but not `/apple`\n    # Regular expressions and parameterized routes will be left alone regardless of this setting.\n    enableStrictRoutes: true\n\n    # extraVolumes is a list of volumes to be added to the pod\n    # extraVolumes:\n    #   - name: ca-certs\n    #     secret:\n    #       defaultMode: 420\n    #       secretName: ca-certs\n    extraVolumes: []\n\n    # extraVolumeMounts is a list of volume mounts to be added to the pod\n    # extraVolumeMounts:\n    #   - name: ca-certs\n    #     mountPath: /etc/ssl/certs/ca-certs.crt\n    #     readOnly: true\n    extraVolumeMounts: []\n\ntyk-pump:\n  ## Default values for tyk-pump chart.\n  ## This is a YAML-formatted file.\n  ## Declare variables to be passed into your templates.\n  ## See Tyk Helm documentation for installation details:\n  ## https://tyk.io/docs/tyk-oss/ce-helm-chart/\n  ## Registry for all Tyk images - https://hub.docker.com/u/tykio\n\n  # Overrides chart name. It is truncated to 63 characters.\n  # Default value: tyk-pump.name\n  nameOverride: \"\"\n\n  # Overrides app name. IT is truncated to 63 characters.\n  # Default value: tyk-pump.fullname\n  fullnameOverride: \"\"\n\n  # If pump is enabled the Gateway will create and collect analytics data to send\n  # to a data store of your choice. These can be set up in the pump config. The\n  # possible pump configs can be found here:\n  # https://github.com/TykTechnologies/tyk-pump#configuration\n  pump:\n    # number for replicas for pump deployment\n    replicaCount: 1\n\n    # podAnnotations is annotations to be added to Tyk Pump pod.\n    # It takes key-value pairs.\n    # There are no required annotation field for Tyk Pump.\n    #\n    # podAnnotations:\n    #   yourkey: value\n    #   image: yourhub\n    podAnnotations: {}\n\n    # podLabels specifies labels to be added in pump Pod\n    podLabels: {}\n\n    image:\n      # image repository for Tyk pump\n      repository: docker.tyk.io/tyk-pump/tyk-pump\n\n      # tag for Tyk pump\n      tag: v1.11.0\n\n      # image pull policy\n      pullPolicy: IfNotPresent\n\n    # image pull secrets to use when pulling images from repository\n    imagePullSecrets: []\n\n    service:\n      # Tyk Pump svc is disabled by default. Set it to true to enable it.\n      enabled: false\n\n      # type specifies type of the service.\n      type: ClusterIP\n\n      # port specifies the port exposed by the service.\n      port: 9090\n\n      # externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or\n      # cluster-wide endpoints, while using LoadBalancer type of service.\n      externalTrafficPolicy: Local\n\n      # annotations specifies annotations to be added Tyk Pump service.\n      annotations: {}\n\n    # containerPort represents the port where Tyk Pump serve the metrics, for instance metrics for Prometheus.\n    # The default port is 9090.\n    containerPort: 9090\n\n    # backend defines the pumps to be created by default, as an array of string.\n    # Supported backends are:\n    #   - \"mongo\": Enables Mongo, Mongo Aggregate and Mongo Selective Pump\n    #   - \"mongo-aggregate\": Enables ONLY Mongo Aggregate AND Mongo Graph Pump\n    #   - \"mongo-selective\": Enables ONLY Mongo Selective\n    #   - \"postgres\": Enables Postgres Aggregate, Postgres Graph Aggregate, SQL Pump and SQL graph pump\n    #   - \"postgres-aggregate\": Enables ONLY SQL Aggregate AND SQL Graph Aggregate\n    #   - \"postgres-pump\": Enables ONLY SQL Pump AND SQL graph pump\n    #   - \"prometheus\": Enables Prometheus Pump. See pump.prometheusPump for Prometheus Pump configurations.\n    #   - \"hybrid\": Enables Hybrid Pump\n    # If you would like to use other backends such as ElasticSearch, please\n    # configure the backend via environment variables.\n    backend:\n      - \"prometheus\"\n      - \"hybrid\"\n\n    # uptimePumpBackend configures uptime Tyk Pump. [\"\", \"mongo\", \"postgres\"].\n    # Set it to \"\" for disabling uptime Tyk Pump. By default, uptime pump is disabled.\n    uptimePumpBackend: \"\"\n\n    # hybridPump configures Tyk Pump to forward Tyk metrics to a Tyk Control Plane.\n    # Please add \"hybrid\" to .Values.pump.backend in order to enable Hybrid Pump.\n    hybridPump:\n      # Send aggregated analytics data to Tyk MDCB\n      enableAggregateAnalytics: true\n      # Hybrid pump RPC calls timeout in seconds. If not specified, default value will be picked up by Tyk Pump.\n      callTimeout: 10\n      # Hybrid pump connection pool size. If not specified, default value will be picked up by Tyk Pump.\n      poolSize: 5\n\n    # prometheusPump configures Tyk Pump to expose Prometheus metrics.\n    # Please add \"prometheus\" to .Values.pump.backend in order to enable Prometheus Pump.\n    # The container port where Tyk Pump serves the metrics to Prometheus can be configured\n    # via .pump.containerPort field.\n    prometheusPump:\n      # host represents the host without port, where Tyk Pump serve the metrics for Prometheus.\n      host: \"\"\n      # path represents the path to the Prometheus collection. For example /metrics.\n      path: /metrics\n      # customMetrics allows defining custom Prometheus metrics for Tyk Pump.\n      # It accepts a string that represents a JSON object. For instance,\n      #\n      # customMetrics: '[{\"name\":\"tyk_http_requests_total\",\"description\":\"Total of API requests\",\"metric_type\":\"counter\",\"labels\":[\"response_code\",\"api_name\",\"method\",\"api_key\",\"alias\",\"path\"]},          {              \"name\":\"tyk_http_latency\",              \"description\":\"Latency of API requests\",              \"metric_type\":\"histogram\",              \"labels\":[\"type\",\"response_code\",\"api_name\",\"method\",\"api_key\",\"alias\",\"path\"]          }]'\n      customMetrics: \"\"\n      # If you are using prometheus Operator, set the fields in the section below.\n      prometheusOperator:\n        # enabled determines whether the Prometheus Operator is in use or not. By default,\n        # it is disabled.\n        # Tyk Pump can be monitored with PodMonitor Custom Resource of Prometheus Operator.\n        # If enabled, PodMonitor resource is created based on .Values.pump.prometheusPump.prometheusOperator.podMonitorSelector\n        # for Tyk Pump.\n        enabled: false\n        # podMonitorSelector represents a podMonitorSelector of your Prometheus resource. So that\n        # your Prometheus resource can select PodMonitor objects based on selector defined here.\n        # Please set this field to the podMonitorSelector field of your monitoring.coreos.com/v1\n        # Prometheus resource's spec.\n        #\n        # You can check the podMonitorSelector via:\n        #   kubectl describe prometheuses.monitoring.coreos.com \u003cPROMETHEUS_POD\u003e\n        podMonitorSelector:\n          release: prometheus-stack\n\n    # sqlGraphPump configures values to be used to configure tyk sql graph pump.\n    sqlGraphPump:\n      # tableName is the name of the table that will be created and used by the sql graph pump\n      tableName: \"tyk_analytics_graphs\"\n\n    # mongoGraphPump configures values to be used to configure tyk mongo graph pump.\n    mongoGraphPump:\n      # collectionName is the name of the collection that will be created and used by the mongo graph pump\n      collectionName: \"tyk_graph_analytics\"\n\n    # We usually recommend not to specify default resources and to leave this\n    # as a conscious choice for the user. This also increases chances charts\n    # run on environments with little resources, such as Minikube. If you do\n    # want to specify resources, uncomment the following lines, adjust them\n    # as necessary, and remove the curly braces after 'resources:'.\n    # limits:\n    #  cpu: 100m\n    #  memory: 128Mi\n    # requests:\n    #  cpu: 100m\n    #  memory: 128Mi\n    resources: {}\n\n    # securityContext values for pump pod. All fields from PodSecurityContext object can be added here.\n    securityContext:\n      runAsUser: 1000\n      fsGroup: 2000\n      runAsNonRoot: true\n\n    # containerSecurityContext values for pump container. All fields from SecurityContext object can be added here.\n    containerSecurityContext:\n      runAsNonRoot: true\n      runAsUser: 1000\n      allowPrivilegeEscalation: false\n      privileged: false\n      readOnlyRootFilesystem: true\n      seccompProfile:\n        type: RuntimeDefault\n      capabilities:\n        drop:\n          - ALL\n\n    # node labels for pump pod assignment\n    nodeSelector: {}\n\n    # tolerations for pump pod assignment\n    tolerations: []\n\n    # affinity for pump pod assignment\n    affinity: {}\n\n    # extraEnvs is used to set environment variables in pump container\n    # - name: TYK_PMP_PURGEDELAY\n    #   value: 30\n    extraEnvs: []\n\n    # extraVolumes is a list of volumes to be added to the pod\n    # extraVolumes:\n    #   - name: ca-certs\n    #     secret:\n    #       defaultMode: 420\n    #       secretName: ca-certs\n    extraVolumes: []\n\n    # extraVolumeMounts is a list of volume mounts to be added to the pod\n    # extraVolumeMounts:\n    #   - name: ca-certs\n    #     mountPath: /etc/ssl/certs/ca-certs.crt\n    #     readOnly: true\n    extraVolumeMounts: []\n\n"
            ],
            "verify": false,
            "version": "2.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "set"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubernetes_secret.tyk_operator_conf",
            "helm_release.mongo",
            "helm_release.redis",
            "helm_release.redis_dp",
            "helm_release.tyk",
            "kubernetes_namespace.tyk_cp",
            "kubernetes_namespace.tyk_dp",
            "random_password.mongo_password",
            "random_password.redis_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "tyk_cp",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "tyk-cp",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "tyk-cp",
                "resource_version": "2606527",
                "uid": "d1796e9e-f49f-4aef-86bd-8a42d8765eff"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "tyk_dp",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "tyk-dp",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "tyk-dp",
                "resource_version": "2606528",
                "uid": "a1492472-fd63-4d87-8c69-1ed6c68aa135"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "cp_gateway_nodeport",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "tyk-cp/gateway-svc-tyk-cp-tyk-gateway-nodeport",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "gateway-svc-tyk-cp-tyk-gateway"
                },
                "name": "gateway-svc-tyk-cp-tyk-gateway-nodeport",
                "namespace": "tyk-cp",
                "resource_version": "2607271",
                "uid": "94e3209f-c1f4-4c9d-8ebb-6a63ed5a79c9"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.96.75.71",
                "cluster_ips": [
                  "10.96.75.71"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "",
                    "node_port": 31490,
                    "port": 8080,
                    "protocol": "TCP",
                    "target_port": "8080"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "gateway-tyk-cp-tyk-gateway"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.mongo",
            "helm_release.redis",
            "helm_release.tyk",
            "kubernetes_namespace.tyk_cp",
            "random_password.mongo_password",
            "random_password.redis_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "dashboard_nodeport",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "tyk-cp/dashboard-svc-tyk-cp-tyk-dashboard-nodeport",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "dashboard-svc-tyk-cp-tyk-dashboard"
                },
                "name": "dashboard-svc-tyk-cp-tyk-dashboard-nodeport",
                "namespace": "tyk-cp",
                "resource_version": "2607268",
                "uid": "3ebb7da4-d494-43e5-909c-c10e783e2689"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.104.146.79",
                "cluster_ips": [
                  "10.104.146.79"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "",
                    "node_port": 32181,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "dashboard-tyk-cp-tyk-dashboard"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.mongo",
            "helm_release.redis",
            "helm_release.tyk",
            "kubernetes_namespace.tyk_cp",
            "random_password.mongo_password",
            "random_password.redis_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "dp_gateway_nodeport",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "tyk-dp/gateway-tyk-data-plane-tyk-gateway-nodeport",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "gateway-tyk-data-plane-tyk-gateway"
                },
                "name": "gateway-tyk-data-plane-tyk-gateway-nodeport",
                "namespace": "tyk-dp",
                "resource_version": "2607340",
                "uid": "18029cac-2d27-42fc-953a-d27f3df967d6"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.101.165.190",
                "cluster_ips": [
                  "10.101.165.190"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "",
                    "node_port": 32684,
                    "port": 8080,
                    "protocol": "TCP",
                    "target_port": "8080"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "gateway-tyk-data-plane-tyk-gateway"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubernetes_secret.tyk_operator_conf",
            "helm_release.mongo",
            "helm_release.redis",
            "helm_release.redis_dp",
            "helm_release.tyk",
            "helm_release.tyk_dp",
            "kubernetes_namespace.tyk_cp",
            "kubernetes_namespace.tyk_dp",
            "random_password.mongo_password",
            "random_password.redis_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_password",
      "name": "mongo_password",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$psZhSR7vsiSPzovWWrAJWuCftVYsxWwfUQnGTQPGeQ7QwxSP8hCiS",
            "id": "none",
            "keepers": null,
            "length": 16,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "jqiv2bpaOkb27ZmL",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "bcrypt_hash"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "result"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_password",
      "name": "redis_password",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$6Jtj3dL0DM6QTwGaIDOKMORFRfcFQw6Hhg72rp4B6SuyiOXAiDnee",
            "id": "none",
            "keepers": null,
            "length": 16,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "sebbYCyd3kbODDBv",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "bcrypt_hash"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "result"
              }
            ]
          ]
        }
      ]
    }
  ],
  "check_results": null
}
